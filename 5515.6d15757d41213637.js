"use strict";(self.webpackChunkRevenUWebApp=self.webpackChunkRevenUWebApp||[]).push([[5515],{85515:(f,g,h)=>{h.r(g),h.d(g,{PayrollCommonPopUpViewModel:()=>m});var l=h(32040),d=h(43767),c=h(98580),b=h(7321),n=h(21774),D=h(82503);class m extends c.g{get Table(){return this.TableObj.Table}get ColSource(){return this.TableObj.Columns}set ColSource(s){this.TableObj.Columns=s}constructor(s){if(super(),this.DialogResult=!1,this.DocHistoryVisibility=!1,this.HistoryVisibility=!1,this.ShiftGetPreviousVisibility=!1,this.dtpStartDate=new D.P6(0),this.dtpEndDate=new D.P6(0),this.TableObj=new b.vv,this.iFlag=0,this.DisplayMessage="",this.Parent=s[0],"MonthlyPayrollViewModel"==this.Parent.className&&(this.Parent.Opacity=.3),this.iFlag=parseInt(s[1]),"100"==s[1].toString()){this.DocHistoryVisibility=!0,this.Title="Document History";let e=s[2].toString(),a=s[3].toString();this.LoadGrid(100);let t=this.GetDocumentHistory(parseInt(e),parseInt(a));if(null!=t&&t.Tables.length>0&&t.Columns[0].Contains("ModifiedBy")){let i=0;for(let r=0;r<t.Tables[0].length;r++){let o=this.dgv.NewRow();o.ModifiedBy=t.Tables[0][r].ModifiedBy.toString(),d.J0.IsEmpty(t.Tables[0][r].ModifiedDate)||(o.ModifiedDate=d.J0.ParseDate(t.Tables[0][r].ModifiedDate.toString()).ToString(l.d.SessionManager.Preferences["Date Format"]+" hh:mm:ss tt")),d.J0.IsEmpty(t.Tables[0][r].maxid)||(i<parseInt(t.Tables[0][r].maxid.toString())&&(i=parseInt(t.Tables[0][r].maxid.toString())),o.maxid=t.Tables[0][r].maxid.toString()),this.dgv.addRow(o)}let u=this.dgv.Table.filter(r=>r.maxid==i.toString());u.length>0&&(u[0].IsCurrent="YES")}}else if("101"==s[1].toString()){let e;this.HistoryVisibility=!0,this.Title="History",this.ColSource=[],e=new n.O7,e.DataType="TextBlock",e.Header="User",e.DisplayMember="CreatedBy",e.Width=90,this.ColSource.push(e),e=new n.O7,e.DataType="TextBlock",e.Header="FirstName",e.DisplayMember="FirstName",e.Width=90,this.ColSource.push(e),e=new n.O7,e.DataType="TextBlock",e.Header="LastName",e.DisplayMember="LastName",e.Width=90,this.ColSource.push(e),e=new n.O7,e.DataType="TextBlock",e.Header=l.d.GetResource("Date"),e.DisplayMember="AppDate",e.Width=128,this.ColSource.push(e),e=new n.O7,e.DataType="LINK",e.Header="Level",e.DisplayMember="LevelName",e.Width=93,this.ColSource.push(e),e=new n.O7,e.DataType="TextBlock",e.Header="Status",e.DisplayMember="Status",e.Width=80,this.ColSource.push(e),e=new n.O7,e.DataType="Format",e.Header="Remarks",e.DisplayMember="Remarks",e.Width=190,this.ColSource.push(e);let a=s[2].toString(),t=s[3].toString(),i=this.GetDocStatusHistory(parseInt(a),parseInt(t),!0);if(null!=i&&i.Tables.length>0){this.TableObj.Table=i.Tables[0],this.TableObj.TableColumns.push("AppDate");for(let o=0;o<this.Table.length;o++)d.J0.IsEmpty(this.Table[o].Date)||(this.Table[o].AppDate=d.J0.ParseDate(this.Table[o].Date.toString()).ToString(l.d.SessionManager.Preferences["Date Format"]+" hh:mm a"));let u=0,r=0;this.Table.length>0&&(u=d.J0.Int(this.Table[this.Table.length-1].WorkFlowLevel),r=d.J0.Int(this.Table[this.Table.length-1].StatusID)),369!=r&&(i.Tables[1]=i.Tables[1].filter(o=>o.levelID>u),i.Tables[1].forEach(o=>{let p=this.TableObj.NewRow();p.LevelName=o.LevelName,p.Status="Pending",p.WorkFlowLevel=o.LevelID,this.TableObj.addRow(p)}));for(let o=this.Table.length;o<7;o++)this.TableObj.addEmptyRow()}}else if("102"==s[1].toString()){let e,a;this.ShiftGetPreviousVisibility=!0,this.Title="Get Previous",this.dtpStartDate.Label="Previous From Date",this.dtpStartDate.LblWidth="140",this.dtpEndDate.Label="Previous To Date",this.dtpEndDate.LblWidth="140",e=this.Parent.ScreenObject.CustomTab.Pages[0].Fields.find(t=>t instanceof D.P6&&"dcAlpha1"==t.DBColumnName),a=this.Parent.ScreenObject.CustomTab.Pages[0].Fields.find(t=>t instanceof D.P6&&"dcAlpha2"==t.DBColumnName),this.Parent.ScreenObject.Preferences.ContainsKey("PickDataBasedOn")&&!d.J0.IsEmpty(this.Parent.ScreenObject.Preferences.PickDataBasedOn)&&("day"==this.Parent.ScreenObject.Preferences.PickDataBasedOn.toString().toLowerCase()?(this.dtpStartDate.Date=e.Date.AddDays(-1),this.dtpEndDate.Date=a.Date.AddDays(-1)):"week"==this.Parent.ScreenObject.Preferences.PickDataBasedOn.toString().toLowerCase()?(this.dtpStartDate.Date=e.Date.AddDays(-7),this.dtpEndDate.Date=a.Date.AddDays(-7)):"month"==this.Parent.ScreenObject.Preferences.PickDataBasedOn.toString().toLowerCase()&&(this.dtpStartDate.Date=e.Date.AddMonths(-1),this.dtpEndDate.Date=a.Date.AddMonths(-1)))}}LoadGrid(s){if(Logger.InfoLog("PayrollCommonPopUpViewModel::Entering LoadGrid()"),100==s){let e;this.dgv=new b.vv,this.dgv.Columns=[],this.dgv.Width="",e=new n.O7,e.Header="User",e.DisplayMember="ModifiedBy",e.ID="ModifiedBy",e.Width=120,e.ReadOnly=!0,this.dgv.Columns.push(e),e=new n.O7,e.Header="Date",e.DisplayMember="ModifiedDate",e.ID="ModifiedDate",e.Width=150,e.ReadOnly=!0,this.dgv.Columns.push(e),e=new n.O7,e.Header="Version",e.DisplayMember="VersionNo",e.ID="VersionNo",e.Width=100,e.IsVisible=!1,this.dgv.Columns.push(e),e=new n.O7,e.Header="Reason",e.DisplayMember="ReviseReason",e.ID="ReviseReason",e.Width=100,e.IsVisible=!1,this.dgv.Columns.push(e),this.dgv.Clear(),this.dgv.TableColumns.push("ModifiedBy"),this.dgv.TableColumns.push("ModifiedDate"),this.dgv.TableColumns.push("MaxID"),this.dgv.TableColumns.push("IsCurrent"),this.dgv.TableColumns.push("VersionNo"),this.dgv.TableColumns.push("ReviseReason")}Logger.InfoLog("PayrollCommonPopUpViewModel::Exiting LoadGrid()")}GetDocumentHistory(s,e){let a=[];return a.push(s),a.push(e),a.push(l.d.SessionManager.UserID),a.push(l.d.SessionManager.RoleID),a.push(l.d.SessionManager.UserName),a.push(l.d.SessionManager.LanguageID),l.d.document.GetDocumentHistory(a)}GetDocStatusHistory(s,e,a){Logger.InfoLog("PayrollCommonPopUpViewModel:: Inside GetDocStatusHistory");let t=[];t.push(s),t.push(e),t.push(a),t.push(l.d.SessionManager.UserID),t.push(l.d.SessionManager.LanguageID);let i=l.d.document.GetDocStatusHistory(t);return Logger.InfoLog("PayrollCommonPopUpViewModel:: Exiting GetDocStatusHistory"),i}Button_Click(s){if("OK"==s.toString()){if(!this.ValidateScreen())return;this.DialogResult=!0}else"Cancel"==s.toString()&&(null!=this.Parent&&"MonthlyPayrollViewModel"==this.Parent.className&&(this.Parent.Opacity=1,this.Parent.DialogResult=!1),this.DialogResult=!1);l.d.page.HideDialog(this.PopUpGUID)}ValidateScreen(){if(102==this.iFlag){if(null==this.dtpStartDate.Date||!this.dtpStartDate.Date)return this.DisplayMessage="Select Start Date",this.dtpStartDate.SetFocus=!0,this.MessageVisibility=!0,!1;if(null==this.dtpEndDate.Date||!this.dtpEndDate.Date)return this.DisplayMessage="Select End Date",this.dtpEndDate.SetFocus=!0,this.MessageVisibility=!0,!1;if(this.dtpEndDate.Date<this.dtpStartDate.Date)return this.DisplayMessage="EndDate Should be greater than or equal to StartDate",this.dtpEndDate.SetFocus=!0,this.MessageVisibility=!0,!1;let s,e;if(s=this.Parent.ScreenObject.CustomTab.Pages[0].Fields.find(i=>i instanceof D.P6&&"dcAlpha1"==i.DBColumnName),e=this.Parent.ScreenObject.CustomTab.Pages[0].Fields.find(i=>i instanceof D.P6&&"dcAlpha2"==i.DBColumnName),this.dtpStartDate.Date>=s.Date&&this.dtpStartDate.Date<=e.Date)return this.DisplayMessage="Previous From Date should not be between from and to date",this.dtpStartDate.SetFocus=!0,this.MessageVisibility=!0,!1;if(this.dtpEndDate.Date>=s.Date&&this.dtpEndDate.Date<=e.Date)return this.DisplayMessage="Previous To Date should not be between from and to date",this.dtpEndDate.SetFocus=!0,this.MessageVisibility=!0,!1;let a=0,t=0;if(a=d.J0.GetDateDifference(this.dtpEndDate.Date,this.dtpStartDate.Date)+1,t=d.J0.GetDateDifference(e.Date,s.Date)+1,a>t)return this.DisplayMessage="Previous Dates cannot be more than from and to date",this.MessageVisibility=!0,!1}return!0}}}}]);