"use strict";(self.webpackChunkRevenUWebApp=self.webpackChunkRevenUWebApp||[]).push([[2144],{42144:(_,O,C)=>{C.r(O),C.d(O,{AccountDrillDownViewModel:()=>B});var A=C(32040),r=C(43767),N=C(54047),c=C(61488),g=C(84151),E=C(39026),I=C(66471),P=C(98580),R=C(27730),S=C(61301),f=C(39807),d=C(31884),W=C(70100);class B extends P.g{get MonthlyVisible(){return this._MonthlyVisible}set MonthlyVisible(e){this._MonthlyVisible=e,e&&(this.ReportGridObj.Data=this.MonthlyData,this.ReportGridObj.ReportColumns=this.MonthlyColumns,this.ReportGridObj.RefreshColumns())}get DailyVisible(){return this._DailyVisible}set DailyVisible(e){this._DailyVisible=e,e&&(this.ReportGridObj.Data=this.DailyData,this.ReportGridObj.ReportColumns=this.DailyColumns,this.ReportGridObj.RefreshColumns())}get VoucherVisible(){return this._VoucherVisible}set VoucherVisible(e){this._VoucherVisible=e,e&&(this.ReportGridObj.Data=this.VoucherData,this.ReportGridObj.ReportColumns=this.VoucherColumns,this.ReportGridObj.RefreshColumns())}get angularGrid(){return this.ReportGridObj.angularGrid}constructor(e,i=null){super(),this.NodeID=0,this.ReportGridObj=new f.j,this.MonthlyData=new Array,this.DailyData=new Array,this.VoucherData=new Array,this._MonthlyVisible=!1,this._DailyVisible=!1,this._VoucherVisible=!1,this.OpeningBalance=new g.Dw(0),this.IsReportLoad=!1,this.ShowRightPanel=!0,this.SavePDF=new d.u("LW Document",10,"Group1"),this.SaveXLS=new d.u("LW Document",10,"Group1"),this.chkSaveXLS_EGS=new d.u("LW Document",10,"Group1"),this.cmbSaveXLS_EGS=new R.y$,this.SaveXLSX=new d.u("LW Document",10,"Group1"),this.SaveToExistXLS=new R.y$,this.PreProcessReport=new d.u("LW Document",10,"Group1"),this.MonthlyOpening="",this.FieldName="",this.IsLocationVisible=!1,this.Parent=null,this.Widget=null,this.WidgetVisible=!1,this.CADimension=0,this.CANodeID=0,this.ShowWizard=!1,this.Accounts=new R.y$(0),this.BackButtonVisible=!1,this.HeaderAppearance=new c.bA,this.TextDataAppearance=new c.bA,this.NumberDataAppearance=new c.bA,this.CrDrNumberDataAppearance=new c.bA,this.GrossTotalAppearance=new c.bA,this.GrossTotalAppearance_Data=new c.bA,this.BalanceFormat=new c.yL,this.DrCrFormat=new c.yL,this.PDCInclude=!0,this.IncludeUnPostedDocs=!0,this.IncludeTerminatedPDC=!0,this.UnPostedDocsList="",this.HideRightNavigation=!0,this.alExportParams=[],this.ReportGridObj.RowDblClick.Subscribe(this,"OnRowDoubleClick"),this.ReportGridObj.DataClick.Subscribe(this,"OnDataClick"),this.Accounts.Visible=!1,Logger.InfoLog("AccountDrillDownViewModel::Entering AccountDrillDownViewModel"),this.HideRightNavigation=!0,null!=e?(this.Report=e,this.BackTrackType=e.BackTrackType,this.Preferences=e.Preferences,this.FromDate=e.oReportDialog.FromDate,this.ToDate=e.oReportDialog.ToDate,this.IsLocationVisible=e.oReportDialog.Locations.Visible,this.ReportLocationWhere=e.oReportDialog.LocationWhere):(this.WidgetVisible=!0,this.Widget=i,this.BackTrackType="Widget"),this.Accounts.SelectionChangedCommand.Subscribe(this,"AccountSelectionChanged"),null!=this.Preferences&&(this.PDCInclude=!(this.Preferences.ContainsKey("IncludePDCs")&&"0"==this.Preferences.IncludePDCs),this.IncludeTerminatedPDC=!(this.Preferences.ContainsKey("IncludeTerminatedPDC")&&"0"==this.Preferences.IncludeTerminatedPDC),this.IncludeUnPostedDocs=!(this.Preferences.ContainsKey("IncludeUnPostedDocs")&&"0"==this.Preferences.IncludeUnPostedDocs),this.IncludeUnPostedDocs&&this.Preferences.ContainsKey("IncludeUnPostedDocsList")&&(this.UnPostedDocsList=this.Preferences.ContainsKey("IncludeUnPostedDocsList")?this.Preferences.IncludeUnPostedDocsList:"")),this.InitControls(),Logger.InfoLog("AccountDrillDownViewModel::Exiting BRSViewModel")}ReLoadData(e,i,o,t,l,a,h){this.MessageVisibility=!1,this.DisplayMessage="",this.NodeID=e,this.CADimension=a,this.CANodeID=h,this.BackTrackType=this.Report.BackTrackType,this.Preferences=this.Report.Preferences,this.FromDate=this.Report.oReportDialog.FromDate,this.ToDate=this.Report.oReportDialog.ToDate,this.IsLocationVisible=this.Report.oReportDialog.Locations.Visible,this.ReportLocationWhere=this.Report.oReportDialog.LocationWhere,this.FieldName=l,this.SetVisibilty(0),this.LoadData(),i>0&&e!=i&&(this.Accounts.Visible=!0,this.Accounts.Items.Clear(),this.Accounts.Items.push(R._p.ComboBoxItems_2(o,e.toString())),this.Accounts.Items.push(R._p.ComboBoxItems_2(t,i.toString())),this.Accounts.SelectedValue=this.Accounts.Items[0].Value)}AccountSelectionChanged(e){this.Accounts.Visible&&null!=this.Accounts.SelectedValue&&null!=e&&(this.NodeID=parseInt(this.Accounts.SelectedValue),this.LoadData())}InitControls(){let e;this.NetBalance=new I.D,this.OutStandingDr=new I.D,this.OutStandingCr=new I.D,this.NetClearBalance=new I.D,this.NetBalance.Label=A.d.GetResource("Reports_NetBalance"),this.OutStandingDr.Label=A.d.GetResource("Reports_OutStandingDr"),this.OutStandingCr.Label=A.d.GetResource("Reports_OutStandingCr"),this.NetClearBalance.Label=A.d.GetResource("Reports_NetClearBalance"),this.SavePDF.Label="PDF",this.SaveXLS.Label="Spreadsheet (xlsx)",this.SaveXLSX.Label="Spreadsheet (Open xlsx)",this.HeaderAppearance.Alignment="Left",this.HeaderAppearance.FontSize=12,this.HeaderAppearance.IsBold=!0,this.HeaderAppearance.BackColor="White",this.HeaderAppearance.ForeColor="Black",this.TextDataAppearance.Alignment="Left",this.TextDataAppearance.FontSize=12,this.TextDataAppearance.BackColor="White",this.TextDataAppearance.ForeColor="Black",this.NumberDataAppearance.Alignment="Right",this.NumberDataAppearance.FontSize=12,this.NumberDataAppearance.BackColor="White",this.NumberDataAppearance.ForeColor="Black",this.GrossTotalAppearance.IsBold=!0,this.GrossTotalAppearance.ForeColor="#FF000000",this.GrossTotalAppearance.BackColor="White",this.GrossTotalAppearance_Data.IsBold=!0,this.GrossTotalAppearance_Data.ForeColor="#FF000000",this.GrossTotalAppearance_Data.BackColor="White",this.GrossTotalAppearance_Data.Alignment="Right",this.BalanceFormat.DecimalsPoints=parseInt(A.d.SessionManager.Preferences.DecimalsinAmount),this.BalanceFormat.NegativeNumber=4,this.BalanceFormat.ShowDefaultSign=1,this.DrCrFormat.DecimalsPoints=parseInt(A.d.SessionManager.Preferences.DecimalsinAmount),this.DrCrFormat.NegativeNumber=0,this.DrCrFormat.ShowDefaultSign=0,"Millions"==A.d.SessionManager.Preferences.Commas?(this.BalanceFormat.Commas=1,this.DrCrFormat.Commas=1):"Lakhs"==A.d.SessionManager.Preferences.Commas&&(this.BalanceFormat.Commas=2,this.DrCrFormat.Commas=2),null!=this.Widget?(this.BackButtonVisible=!1,this.MonthlyVisible=!1,this.DailyVisible=!1,this.VoucherVisible=!0,this.VoucherColumns=new Array,e=this.GetColumn("Sno","Sno","STRING",this.TextDataAppearance,40),e.HeaderText="Sno",this.VoucherColumns.push(e),e=this.GetColumn("DocDate","Date","DATE",this.TextDataAppearance,100),e.HeaderText="Doc Date",this.VoucherColumns.push(e),e=this.GetColumn("VoucherNo","VoucherNo","STRING",this.TextDataAppearance,130),e.HeaderText="Doc No",e.LinkType=N.T6.Document,this.VoucherColumns.push(e),e=this.GetColumn("Quantity","Qty","FLOAT",this.NumberDataAppearance,100),e.HeaderText="Quantity",e.DataFormat.DecimalsPoints=parseInt(A.d.SessionManager.Preferences.DecimalsinQty),this.VoucherColumns.push(e),"23"==this.Widget.CallStatusID&&(e=this.GetColumn("ExeQty","Ex. Qty","FLOAT",this.NumberDataAppearance,115),e.HeaderText="Executed Qty",e.DataFormat.DecimalsPoints=parseInt(A.d.SessionManager.Preferences.DecimalsinQty),this.VoucherColumns.push(e))):(this.MonthlyColumns=new Array,e=this.GetColumn("MonthName","Doc_Month","STRING",this.TextDataAppearance,90),this.MonthlyColumns.push(e),e=this.GetColumn("YearName","Doc_Year","STRING",this.TextDataAppearance,55),this.MonthlyColumns.push(e),"Account"==this.BackTrackType?(e=this.GetColumn("OpBalance","Op.Balance","FLOAT",this.NumberDataAppearance,120),e.DataFormat.ShowDefaultSign=1,e.DataFormat.NegativeNumber=4,this.MonthlyColumns.push(e),e=this.GetColumn("Dr","DocumentDesigner_DisplayDebit","FLOAT",this.NumberDataAppearance,120),this.MonthlyColumns.push(e),e=this.GetColumn("Cr","DocumentDesigner_DisplayCredit","FLOAT",this.NumberDataAppearance,120),this.MonthlyColumns.push(e),e=this.GetColumn("Balance","Service_Balance","FLOAT",this.NumberDataAppearance,130),e.DataFormat.ShowDefaultSign=1,e.DataFormat.NegativeNumber=4,this.MonthlyColumns.push(e)):"Product"==this.BackTrackType&&(e=this.GetColumn("OpStock","Reports_LblOpStock","FLOAT",this.NumberDataAppearance,120),this.MonthlyColumns.push(e),e=this.GetColumn("Receipt","DocumentDesigner_Receipt","FLOAT",this.NumberDataAppearance,120),this.MonthlyColumns.push(e),e=this.GetColumn("Issue","Reports_LblIssue","FLOAT",this.NumberDataAppearance,120),this.MonthlyColumns.push(e),e=this.GetColumn("Closing","Reports_LblClosing","FLOAT",this.NumberDataAppearance,120),this.MonthlyColumns.push(e)),this.DailyColumns=new Array,e=this.GetColumn("Date","Service_Date","DATE",this.TextDataAppearance,110),this.DailyColumns.push(e),"Account"==this.BackTrackType?(e=this.GetColumn("OpBalance","Op.Balance","FLOAT",this.NumberDataAppearance,120),e.DataFormat.ShowDefaultSign=1,e.DataFormat.NegativeNumber=4,this.DailyColumns.push(e),e=this.GetColumn("Dr","DocumentDesigner_DisplayDebit","FLOAT",this.NumberDataAppearance,120),this.DailyColumns.push(e),e=this.GetColumn("Cr","DocumentDesigner_DisplayCredit","FLOAT",this.NumberDataAppearance,120),this.DailyColumns.push(e),e=this.GetColumn("Balance","Service_Balance","FLOAT",this.NumberDataAppearance,120),e.DataFormat.ShowDefaultSign=1,e.DataFormat.NegativeNumber=4,this.DailyColumns.push(e)):"Product"==this.BackTrackType&&(e=this.GetColumn("OpStock","Reports_LblOpStock","FLOAT",this.NumberDataAppearance,120),this.DailyColumns.push(e),e=this.GetColumn("Receipt","DocumentDesigner_Receipt","FLOAT",this.NumberDataAppearance,120),this.DailyColumns.push(e),e=this.GetColumn("Issue","Reports_LblIssue","FLOAT",this.NumberDataAppearance,120),this.DailyColumns.push(e),e=this.GetColumn("Closing","Reports_LblClosing","FLOAT",this.NumberDataAppearance,120),this.DailyColumns.push(e)),this.VoucherColumns=new Array,e=this.GetColumn("VoucherNo","Doc_DocumentNumber","STRING",this.TextDataAppearance,120),e.LinkType=N.T6.Document,this.VoucherColumns.push(e),"Account"==this.BackTrackType?(e=this.GetColumn("Dr","DocumentDesigner_DisplayDebit","FLOAT",this.NumberDataAppearance,120),this.VoucherColumns.push(e),e=this.GetColumn("Cr","DocumentDesigner_DisplayCredit","FLOAT",this.NumberDataAppearance,120),this.VoucherColumns.push(e)):"Product"==this.BackTrackType&&(e=this.GetColumn("Receipt","DocumentDesigner_Receipt","FLOAT",this.NumberDataAppearance,120),this.VoucherColumns.push(e),e=this.GetColumn("Issue","Reports_LblIssue","FLOAT",this.NumberDataAppearance,120),this.VoucherColumns.push(e)))}GetColumn(e,i,o,t,l){let a=new c.yL;"Account"==this.BackTrackType?a.DecimalsPoints=parseInt(A.d.SessionManager.Preferences.DecimalsinAmount):"Product"==this.BackTrackType&&(a.DecimalsPoints=parseInt(A.d.SessionManager.Preferences.DecimalsinQty)),"Millions"==A.d.SessionManager.Preferences.Commas?a.Commas=1:"Lakhs"==A.d.SessionManager.Preferences.Commas&&(a.Commas=2),a.DateType=A.d.SessionManager.Preferences["Date Format"];let h=new N.D_;return h.gridLines=3,h.ID=e,h.FieldName=e,h.HeaderText=A.d.GetResource(i),h.HeaderAppearance=t,h.DataAppearance=t,h.HeaderHeight=22,h.width=l,h.DataFormat=a,h.ColumnType=o,h}OnButtonClick(e){if(this.DisplayMessage="","Close"==e)null!=this.Widget?A.d.page.HideDialog(this.PopUpGUID):(this.Accounts.Visible=!1,this.Parent.ShowAccountDrillDown=!1);else if("BACK"==e)this.DailyVisible?this.SetVisibilty(0):this.VoucherVisible&&this.SetVisibilty(1);else if("CLEAR"!=e)if("CancelExport"==e)this.ShowExport=!1;else if("ExportData"==e){let i=new E.ReportViewModel;this.MonthlyVisible?(i.ReportColumns=this.MonthlyColumns,i.Data=this.MonthlyData):this.DailyVisible?(i.ReportColumns=this.DailyColumns,i.Data=this.DailyData):this.VoucherVisible&&(i.ReportColumns=this.VoucherColumns,i.Data=this.VoucherData),i.ScreenName="";let o=[],t={},a="<RptBody><LevelTree>None</LevelTree><LevelNo>10</LevelNo><_ColumnHeaderFontStream>AAEAAAD/////AQAAAAAAAAAMAgAAAFFTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABNTeXN0ZW0uRHJhd2luZy5Gb250BAAAAAROYW1lBFNpemUFU3R5bGUEVW5pdAEABAQLGFN5c3RlbS5EcmF3aW5nLkZvbnRTdHlsZQIAAAAbU3lzdGVtLkRyYXdpbmcuR3JhcGhpY3NVbml0AgAAAAIAAAAGAwAAAAVBcmlhbAAAAEEF/P///xhTeXN0ZW0uRHJhd2luZy5Gb250U3R5bGUBAAAAB3ZhbHVlX18ACAIAAAABAAAABfv///8bU3lzdGVtLkRyYXdpbmcuR3JhcGhpY3NVbml0AQAAAAd2YWx1ZV9fAAgCAAAAAwAAAAs=</_ColumnHeaderFontStream><_GroupFontStream>AAEAAAD/////AQAAAAAAAAAMAgAAAFFTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABNTeXN0ZW0uRHJhd2luZy5Gb250BAAAAAROYW1lBFNpemUFU3R5bGUEVW5pdAEABAQLGFN5c3RlbS5EcmF3aW5nLkZvbnRTdHlsZQIAAAAbU3lzdGVtLkRyYXdpbmcuR3JhcGhpY3NVbml0AgAAAAIAAAAGAwAAAAVBcmlhbAAAAEEF/P///xhTeXN0ZW0uRHJhd2luZy5Gb250U3R5bGUBAAAAB3ZhbHVlX18ACAIAAAABAAAABfv///8bU3lzdGVtLkRyYXdpbmcuR3JhcGhpY3NVbml0AQAAAAd2YWx1ZV9fAAgCAAAAAwAAAAs=</_GroupFontStream><_SubTotalFontStream>AAEAAAD/////AQAAAAAAAAAMAgAAAFFTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABNTeXN0ZW0uRHJhd2luZy5Gb250BAAAAAROYW1lBFNpemUFU3R5bGUEVW5pdAEABAQLGFN5c3RlbS5EcmF3aW5nLkZvbnRTdHlsZQIAAAAbU3lzdGVtLkRyYXdpbmcuR3JhcGhpY3NVbml0AgAAAAIAAAAGAwAAAAVBcmlhbAAAAEEF/P///xhTeXN0ZW0uRHJhd2luZy5Gb250U3R5bGUBAAAAB3ZhbHVlX18ACAIAAAABAAAABfv///8bU3lzdGVtLkRyYXdpbmcuR3JhcGhpY3NVbml0AQAAAAd2YWx1ZV9fAAgCAAAAAwAAAAs=</_SubTotalFontStream><_GrandTotalFontStream>AAEAAAD/////AQAAAAAAAAAMAgAAAFFTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABNTeXN0ZW0uRHJhd2luZy5Gb250BAAAAAROYW1lBFNpemUFU3R5bGUEVW5pdAEABAQLGFN5c3RlbS5EcmF3aW5nLkZvbnRTdHlsZQIAAAAbU3lzdGVtLkRyYXdpbmcuR3JhcGhpY3NVbml0AgAAAAIAAAAGAwAAAAVBcmlhbAAAAEEF/P///xhTeXN0ZW0uRHJhd2luZy5Gb250U3R5bGUBAAAAB3ZhbHVlX18ACAIAAAABAAAABfv///8bU3lzdGVtLkRyYXdpbmcuR3JhcGhpY3NVbml0AQAAAAd2YWx1ZV9fAAgCAAAAAwAAAAs=</_GrandTotalFontStream><BodyHeaderHeight>50</BodyHeaderHeight><ShowHeaderBackColors>true</ShowHeaderBackColors><ShowBodyHorizontalLines>true</ShowBodyHorizontalLines><ShowBodyVerticalLines>true</ShowBodyVerticalLines><ShowBodyBorders>false</ShowBodyBorders><ShowBodyBackColors>true</ShowBodyBackColors><CenterOnPage>false</CenterOnPage><VerticalAlignment>Center</VerticalAlignment><BodyPosition>Fixed</BodyPosition><BodyBottom>Fixed</BodyBottom><BodyHeight>800</BodyHeight><LeftMargin>15</LeftMargin><PageWidth>829</PageWidth><IsLandscape>false</IsLandscape><IgnoreBody>false</IgnoreBody><ReportHeaderHeight>101</ReportHeaderHeight><PageHeaderHeight>5</PageHeaderHeight><PageFooterHeight>5</PageFooterHeight><ReportFooterHeight>10</ReportFooterHeight><PageHeaderPosition>Fixed</PageHeaderPosition><ShowReportHeader>FirstPage</ShowReportHeader><ShowPageHeader>EveryPage</ShowPageHeader><ReportFooterPosition>Fixed</ReportFooterPosition><PageFooterPosition>Fixed</PageFooterPosition><ShowReportFooter>LastPage</ShowReportFooter><ShowPageFooter>EveryPage</ShowPageFooter><BodyFontStream>AAEAAAD/////AQAAAAAAAAAMAgAAAFFTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABNTeXN0ZW0uRHJhd2luZy5Gb250BAAAAAROYW1lBFNpemUFU3R5bGUEVW5pdAEABAQLGFN5c3RlbS5EcmF3aW5nLkZvbnRTdHlsZQIAAAAbU3lzdGVtLkRyYXdpbmcuR3JhcGhpY3NVbml0AgAAAAIAAAAGAwAAAAVBcmlhbAAAAEEF/P///xhTeXN0ZW0uRHJhd2luZy5Gb250U3R5bGUBAAAAB3ZhbHVlX18ACAIAAAAAAAAABfv///8bU3lzdGVtLkRyYXdpbmcuR3JhcGhpY3NVbml0AQAAAAd2YWx1ZV9fAAgCAAAAAwAAAAs=</BodyFontStream></RptBody>\x01<VPText><Text>@@DATE@@</Text><FontStream>AAEAAAD/////AQAAAAAAAAAMAgAAAFFTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABNTeXN0ZW0uRHJhd2luZy5Gb250BAAAAAROYW1lBFNpemUFU3R5bGUEVW5pdAEABAQLGFN5c3RlbS5EcmF3aW5nLkZvbnRTdHlsZQIAAAAbU3lzdGVtLkRyYXdpbmcuR3JhcGhpY3NVbml0AgAAAAIAAAAGAwAAAAVBcmlhbAAAEEEF/P///xhTeXN0ZW0uRHJhd2luZy5Gb250U3R5bGUBAAAAB3ZhbHVlX18ACAIAAAAAAAAABfv///8bU3lzdGVtLkRyYXdpbmcuR3JhcGhpY3NVbml0AQAAAAd2YWx1ZV9fAAgCAAAAAwAAAAs=</FontStream><Alignment>TopLeft</Alignment><FieldAlignment>None</FieldAlignment><PrintAt>Default</PrintAt><Size><Width>800</Width><Height>18</Height></Size><Left>99</Left><Top>35</Top><LineSpacing>0</LineSpacing></VPText>\x11<VPText><Text>@@AccountName@@</Text><FontStream>AAEAAAD/////AQAAAAAAAAAMAgAAAFFTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABNTeXN0ZW0uRHJhd2luZy5Gb250BAAAAAROYW1lBFNpemUFU3R5bGUEVW5pdAEABAQLGFN5c3RlbS5EcmF3aW5nLkZvbnRTdHlsZQIAAAAbU3lzdGVtLkRyYXdpbmcuR3JhcGhpY3NVbml0AgAAAAIAAAAGAwAAAAVBcmlhbAAAEEEF/P///xhTeXN0ZW0uRHJhd2luZy5Gb250U3R5bGUBAAAAB3ZhbHVlX18ACAIAAAAAAAAABfv///8bU3lzdGVtLkRyYXdpbmcuR3JhcGhpY3NVbml0AQAAAAd2YWx1ZV9fAAgCAAAAAwAAAAs=</FontStream><Alignment>TopLeft</Alignment><FieldAlignment>None</FieldAlignment><PrintAt>Default</PrintAt><Size><Width>700</Width><Height>18</Height></Size><Left>100</Left><Top>75</Top><LineSpacing>0</LineSpacing></VPText>\x11<VPText><Text>##Account Name :##</Text><FontStream>AAEAAAD/////AQAAAAAAAAAMAgAAAFFTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABNTeXN0ZW0uRHJhd2luZy5Gb250BAAAAAROYW1lBFNpemUFU3R5bGUEVW5pdAEABAQLGFN5c3RlbS5EcmF3aW5nLkZvbnRTdHlsZQIAAAAbU3lzdGVtLkRyYXdpbmcuR3JhcGhpY3NVbml0AgAAAAIAAAAGAwAAAAVBcmlhbAAAEEEF/P///xhTeXN0ZW0uRHJhd2luZy5Gb250U3R5bGUBAAAAB3ZhbHVlX18ACAIAAAAAAAAABfv///8bU3lzdGVtLkRyYXdpbmcuR3JhcGhpY3NVbml0AQAAAAd2YWx1ZV9fAAgCAAAAAwAAAAs=</FontStream><Alignment>TopLeft</Alignment><FieldAlignment>None</FieldAlignment><PrintAt>Default</PrintAt><Size><Width>97</Width><Height>18</Height></Size><Left>2</Left><Top>75</Top><LineSpacing>0</LineSpacing></VPText>\x12<VPVar><_DataSource>ReservedWords</_DataSource><_SysColumn>ReportTitle</_SysColumn><ROff>0</ROff><Decimals>2</Decimals><DateFormat>dd MMM yyyy</DateFormat><Commas>Million</Commas><InWords>false</InWords><UseOnce>false</UseOnce><FontStream>AAEAAAD/////AQAAAAAAAAAMAgAAAFFTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABNTeXN0ZW0uRHJhd2luZy5Gb250BAAAAAROYW1lBFNpemUFU3R5bGUEVW5pdAEABAQLGFN5c3RlbS5EcmF3aW5nLkZvbnRTdHlsZQIAAAAbU3lzdGVtLkRyYXdpbmcuR3JhcGhpY3NVbml0AgAAAAIAAAAGAwAAAAVBcmlhbAAAQEEF/P///xhTeXN0ZW0uRHJhd2luZy5Gb250U3R5bGUBAAAAB3ZhbHVlX18ACAIAAAABAAAABfv///8bU3lzdGVtLkRyYXdpbmcuR3JhcGhpY3NVbml0AQAAAAd2YWx1ZV9fAAgCAAAAAwAAAAs=</FontStream><Alignment>TopLeft</Alignment><SupressZero>false</SupressZero><SupressFractionZero>false</SupressFractionZero><FieldAlignment>None</FieldAlignment><PrintAt>Default</PrintAt><Size><Width>800</Width><Height>25</Height></Size><Left>2</Left><Top>45</Top><LineSpacing>0</LineSpacing><DataSource>ReservedWords</DataSource><SysColumn>ReportTitle</SysColumn><UniqueID>C1</UniqueID></VPVar>\x11<VPVar><_DataSource>ReservedWords</_DataSource><_SysColumn>CompanyName</_SysColumn><ROff>0</ROff><Decimals>2</Decimals><DateFormat>dd MMM yyyy</DateFormat><Commas>Million</Commas><InWords>false</InWords><UseOnce>false</UseOnce><FontStream>AAEAAAD/////AQAAAAAAAAAMAgAAAFFTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABNTeXN0ZW0uRHJhd2luZy5Gb250BAAAAAROYW1lBFNpemUFU3R5bGUEVW5pdAEABAQLGFN5c3RlbS5EcmF3aW5nLkZvbnRTdHlsZQIAAAAbU3lzdGVtLkRyYXdpbmcuR3JhcGhpY3NVbml0AgAAAAIAAAAGAwAAAA9UaW1lcyBOZXcgUm9tYW4AAIBBBfz///8YU3lzdGVtLkRyYXdpbmcuRm9udFN0eWxlAQAAAAd2YWx1ZV9fAAgCAAAAAQAAAAX7////G1N5c3RlbS5EcmF3aW5nLkdyYXBoaWNzVW5pdAEAAAAHdmFsdWVfXwAIAgAAAAMAAAAL</FontStream><Alignment>TopLeft</Alignment><SupressZero>false</SupressZero><SupressFractionZero>false</SupressFractionZero><FieldAlignment>None</FieldAlignment><PrintAt>Default</PrintAt><Size><Width>800</Width><Height>30</Height></Size><Left>2</Left><Top>5</Top><LineSpacing>0</LineSpacing><DataSource>ReservedWords</DataSource><SysColumn>CompanyName</SysColumn><UniqueID>C2</UniqueID></VPVar>".split("\x01");a[1]=a[1].Replace("@@AccountName@@",r.J0.EncodeXML(this.AccountName).TrimStart("[").TrimEnd("]")),a[1]=a[1].Replace("##Account Name :##","Account"==this.Parent.BackTrackType?"Account Name :":"Product Name :"),a[1]=a[1].Replace("@@DATE@@",""),t.ReportName=this.Title,t.ReportBody=a[0],t.ReportHeader=a[1].Replace("@@AccountName@@",r.J0.EncodeXML(this.AccountName).TrimStart("[").TrimEnd("]")),t.PageHeader=a[2],t.PageFooter=a[3],t.ReportFooter=a[4],o.push(t),i.Reportds={},i.Reportds.Tables=[],i.Reportds.Tables.push(o),i.SaveXLS=this.SaveXLS,i.SavePDF=this.SavePDF,i.SaveXLSX=this.SaveXLSX,i.SaveToExistXLS=this.SaveToExistXLS,i.IsExportFromOthers=!0,i.Export(),r.J0.IsEmpty(this.DisplayMessage)&&(this.DisplayMessage="Exported sucessfully")}else if("ShowExportScreen"==e)this.ShowExport=!0;else if("SaveToExistXLSChecked"!=e&&"Export"==e){let i=new E.ReportViewModel;i.ReportColumns=this.ReportGridObj.ReportColumns,i.Data=this.ReportGridObj.Data,i.ScreenName="";let o={};i.Reportds={Tables:[],Columns:[]},i.Reportds.Tables.push([o]),this.ExportFile("Print",i)}}ExportFile(e,i){this.DisplayMessage="Print"==e?"Printing data please wait...":"Exporting data please wait...";let o={};i.InitPrintOrExport(o),o.Type=e,o.PrintDataOnSeperatePageBy=this.Preferences.ContainsKey("PrintDataOnSeperatePageBy")?this.Preferences.PrintDataOnSeperatePageBy:"","PDF"==e?o.lst=[]:"Print"==e?(o.lst=[],o.Type="PDF"):("Excel"==e||"OpenXML"==e)&&(o.lst=[]),o.al="al",A.d.report.ExportReport(i.Data,i.ReportColumns,o,"AccDrillDown").subscribe(t=>{console.log(t),"Print"==e?A.d.SessionManager.printTab(t.FileName):(A.d.SessionManager.Download(t.FileName,"khasim"),r.J0.IsEmpty(t.Message)&&!r.J0.IsEmpty(t.FileName)&&(this.DisplayMessage="Exported Successfully"))},t=>{console.log(t)})}LoadData(){let e=0,i=0,o=0,t=0,l=20,h="";"Account"==this.BackTrackType?h=this.GetAccountQuery():"Product"==this.BackTrackType&&(h=this.GetProductQuery());let s=A.d.report.ReportDataSet("RPT022",null!=this.Report&&this.Report.IsReportDB,h);if(this.MonthlyVisible){if("Account"==this.BackTrackType){s.Tables.length>1&&s.Tables[1].length>0&&(o=r.J0.Double(s.Tables[1][0].Opening)),null!=this.Preferences&&this.Preferences.ContainsKey("OpenCompany")&&"1"==this.Preferences.OpenCompany&&s.Tables.length>2&&s.Tables[2].length>0&&s.Columns[2].Contains("AccountTypeID")&&("4"==s.Tables[2][0].AccountTypeID.toString()||"5"==s.Tables[2][0].AccountTypeID.toString()||"8"==s.Tables[2][0].AccountTypeID.toString()||"9"==s.Tables[2][0].AccountTypeID.toString()||"11"==s.Tables[2][0].AccountTypeID.toString()||"12"==s.Tables[2][0].AccountTypeID.toString())&&(o=s.Columns[1].Contains("PeriodOpening")?r.J0.Double(s.Tables[1][0].PeriodOpening):0),this.OpeningBalance.Label=A.d.GetResource("Reports_OpeningBalance");let n=new c.DK;this.SetCellValue(o,this.BalanceFormat,"FLOAT",n,""),this.OpeningBalance.Text=this.MonthlyOpening=n.Text,s.Tables.length>2&&s.Tables[2].length>0&&(this.AccountName="["+s.Tables[2][0].AccountName.toString()+"]"),this.MonthlyData.Clear(),s.Tables[0].forEach(D=>{this.oRow=new c.Ji(this.MonthlyColumns.length,22),this.oRow.Height=l,this.SetCellValue(D.MonthName,this.MonthlyColumns[0].DataFormat,this.MonthlyColumns[0].ColumnType,this.oRow.Cells[0],this.MonthlyColumns[0].ID),this.SetCellValue(D.YearName,this.MonthlyColumns[1].DataFormat,this.MonthlyColumns[1].ColumnType,this.oRow.Cells[1],this.MonthlyColumns[1].ID),this.SetCellValue(o,this.MonthlyColumns[2].DataFormat,this.MonthlyColumns[2].ColumnType,this.oRow.Cells[2],this.MonthlyColumns[2].ID),t=r.J0.Double(D.Debit.toString()),!r.J0.IsEmpty(D.Debit)&&r.J0.DoubleTryParse(D.Debit.toString())&&t>0&&(i+=t,this.SetCellValue(t,this.MonthlyColumns[3].DataFormat,this.MonthlyColumns[3].ColumnType,this.oRow.Cells[3],this.MonthlyColumns[3].ID)),t=r.J0.Double(D.Credit.toString()),!r.J0.IsEmpty(D.Credit)&&r.J0.DoubleTryParse(D.Credit.toString())&&t>0&&(e+=t,this.SetCellValue(t,this.MonthlyColumns[4].DataFormat,this.MonthlyColumns[4].ColumnType,this.oRow.Cells[4],this.MonthlyColumns[4].ID)),t=r.J0.Double(D.DiffDrCr),o+=t,this.SetCellValue(o,this.MonthlyColumns[5].DataFormat,this.MonthlyColumns[5].ColumnType,this.oRow.Cells[5],this.MonthlyColumns[5].ID),this.oRow.NodeID=r.J0.Int(D.mn),this.oRow.id=A.d.slick.rowid,this.MonthlyData.push(this.oRow)})}else if("Product"==this.BackTrackType){s.Tables.length>1&&s.Tables[1].length>0&&(o=r.J0.Double(s.Tables[1][0].Opening)),this.OpeningBalance.Label=A.d.GetResource("Reports_LblOpeningStock");let n=new c.DK;this.SetCellValue(o,this.MonthlyColumns[2].DataFormat,"FLOAT",n,this.MonthlyColumns[2].ID),this.OpeningBalance.Text=this.MonthlyOpening=n.Text,s.Tables.length>2&&s.Tables[2].length>0&&(this.AccountName="["+s.Tables[2][0].ProductName.toString()+"]"),this.MonthlyData.Clear(),s.Tables[0].forEach(D=>{this.oRow=new c.Ji(this.MonthlyColumns.length,22),this.oRow.Height=l,this.SetCellValue(D.MonthName,this.MonthlyColumns[0].DataFormat,this.MonthlyColumns[0].ColumnType,this.oRow.Cells[0],this.MonthlyColumns[0].ID),this.SetCellValue(D.YearName,this.MonthlyColumns[1].DataFormat,this.MonthlyColumns[1].ColumnType,this.oRow.Cells[1],this.MonthlyColumns[1].ID),this.SetCellValue(o,this.MonthlyColumns[2].DataFormat,this.MonthlyColumns[2].ColumnType,this.oRow.Cells[2],this.MonthlyColumns[2].ID),t=r.J0.Double(D.Receipt),this.SetCellValue(t,this.MonthlyColumns[3].DataFormat,this.MonthlyColumns[3].ColumnType,this.oRow.Cells[3],this.MonthlyColumns[3].ID),i+=t,t=r.J0.Double(D.Issue),this.SetCellValue(t,this.MonthlyColumns[4].DataFormat,this.MonthlyColumns[4].ColumnType,this.oRow.Cells[4],this.MonthlyColumns[4].ID),e+=t,o=o+r.J0.Double(D.Receipt)-r.J0.Double(D.Issue),this.SetCellValue(o,this.MonthlyColumns[5].DataFormat,this.MonthlyColumns[5].ColumnType,this.oRow.Cells[5],this.MonthlyColumns[5].ID),this.oRow.NodeID=parseInt(D.mn),this.oRow.id=A.d.slick.rowid,this.MonthlyData.push(this.oRow)})}s.Tables[0].length>0&&(this.oRow=new c.Ji(this.MonthlyColumns.length,22),this.oRow.Height=24,this.oRow.Cells[2].IsNormal=!1,this.oRow.Cells[2].CellAppearance=this.GrossTotalAppearance,this.oRow.Cells[2].Text="Tr.Totals",this.oRow.Cells[3].IsNormal=!1,this.oRow.Cells[3].CellAppearance=this.GrossTotalAppearance_Data,this.SetCellValue(i,this.MonthlyColumns[3].DataFormat,this.MonthlyColumns[3].ColumnType,this.oRow.Cells[3],this.MonthlyColumns[3].ID),this.oRow.Cells[4].IsNormal=!1,this.oRow.Cells[4].CellAppearance=this.GrossTotalAppearance_Data,this.SetCellValue(e,this.MonthlyColumns[4].DataFormat,this.MonthlyColumns[4].ColumnType,this.oRow.Cells[4],this.MonthlyColumns[4].ID),this.oRow.id=A.d.slick.rowid,this.MonthlyData.push(this.oRow))}else if(this.DailyVisible){if("Account"==this.BackTrackType){s.Tables[1].length>0&&(o=r.J0.Double(s.Tables[1][0].Opening)),null!=this.Preferences&&this.Preferences.ContainsKey("OpenCompany")&&"1"==this.Preferences.OpenCompany&&s.Tables.length>2&&s.Tables[2].length>0&&s.Columns[2].Contains("AccountTypeID")&&("4"==s.Tables[2][0].AccountTypeID.toString()||"5"==s.Tables[2][0].AccountTypeID.toString()||"8"==s.Tables[2][0].AccountTypeID.toString()||"9"==s.Tables[2][0].AccountTypeID.toString()||"11"==s.Tables[2][0].AccountTypeID.toString()||"12"==s.Tables[2][0].AccountTypeID.toString())&&(o=s.Columns[1].Contains("PeriodOpening")?r.J0.Double(s.Tables[1][0].PeriodOpening):0),this.OpeningBalance.Label=A.d.GetResource("Reports_OpeningBalance");let n=new c.DK;this.SetCellValue(o,this.BalanceFormat,"FLOAT",n,""),this.OpeningBalance.Text=n.Text,this.DailyData.Clear(),s.Tables[0].forEach(D=>{this.oRow=new c.Ji(this.MonthlyColumns.length,22),this.oRow.Height=l,this.oRow.Tag=D.DocDate,this.SetCellValue(D.DocDate,this.DailyColumns[0].DataFormat,"DATE",this.oRow.Cells[0],this.DailyColumns[0].ID),this.SetCellValue(o,this.DailyColumns[1].DataFormat,"FLOAT",this.oRow.Cells[1],this.DailyColumns[1].ID),!r.J0.IsEmpty(D.Debit)&&r.J0.DoubleTryParse(D.Debit.toString())&&t>0&&(i+=t,this.SetCellValue(t,this.DailyColumns[2].DataFormat,"FLOAT",this.oRow.Cells[2],this.DailyColumns[2].ID)),!r.J0.IsEmpty(D.Credit)&&r.J0.DoubleTryParse(D.Credit.toString())&&t>0&&(e+=t,this.SetCellValue(t,this.DailyColumns[3].DataFormat,"FLOAT",this.oRow.Cells[3],this.DailyColumns[3].ID)),t=r.J0.Double(D.DiffDrCr),o+=t,this.SetCellValue(o,this.DailyColumns[4].DataFormat,"FLOAT",this.oRow.Cells[4],this.DailyColumns[4].ID),this.oRow.id=A.d.slick.rowid,this.DailyData.push(this.oRow)})}else if("Product"==this.BackTrackType){s.Tables[1].length>0&&(o=r.J0.Double(s.Tables[1][0].Opening)),this.OpeningBalance.Label=A.d.GetResource("Reports_LblOpeningStock");let n=new c.DK;this.SetCellValue(o,this.MonthlyColumns[2].DataFormat,"FLOAT",n,this.MonthlyColumns[2].ID),this.OpeningBalance.Text=n.Text,this.DailyData.Clear(),s.Tables[0].forEach(D=>{this.oRow=new c.Ji(this.MonthlyColumns.length,22),this.oRow.Height=l,this.oRow.Tag=D.DocDate,this.SetCellValue(D.DocDate,this.DailyColumns[0].DataFormat,"DATE",this.oRow.Cells[0],this.DailyColumns[0].ID),this.SetCellValue(o,this.MonthlyColumns[1].DataFormat,"FLOAT",this.oRow.Cells[1],this.MonthlyColumns[1].ID),t=parseFloat(D.Receipt),this.SetCellValue(t,this.MonthlyColumns[2].DataFormat,"FLOAT",this.oRow.Cells[2],this.MonthlyColumns[2].ID),i+=t,t=parseFloat(D.Issue),this.SetCellValue(t,this.MonthlyColumns[3].DataFormat,"FLOAT",this.oRow.Cells[3],this.MonthlyColumns[3].ID),e+=t,o=o+parseFloat(D.Receipt)-parseFloat(D.Issue),this.SetCellValue(o,this.MonthlyColumns[4].DataFormat,"FLOAT",this.oRow.Cells[4],this.MonthlyColumns[4].ID),this.oRow.id=A.d.slick.rowid,this.DailyData.push(this.oRow)})}s.Tables[0].length>0&&(this.oRow=new c.Ji(this.DailyColumns.length,22),this.oRow.Height=24,this.oRow.Cells[1].IsNormal=!1,this.oRow.Cells[1].CellAppearance=this.GrossTotalAppearance,this.oRow.Cells[1].Text="Tr.Totals",this.oRow.Cells[2].IsNormal=!1,this.oRow.Cells[2].CellAppearance=this.GrossTotalAppearance_Data,this.SetCellValue(i,this.DailyColumns[2].DataFormat,"FLOAT",this.oRow.Cells[2],this.DailyColumns[2].ID),this.oRow.Cells[3].IsNormal=!1,this.oRow.Cells[3].CellAppearance=this.GrossTotalAppearance_Data,this.SetCellValue(e,this.DailyColumns[3].DataFormat,"FLOAT",this.oRow.Cells[3],this.DailyColumns[3].ID),this.oRow.id=A.d.slick.rowid,this.DailyData.push(this.oRow))}else this.VoucherVisible&&("Account"==this.BackTrackType?(this.VoucherData.Clear(),s.Tables[0].forEach(n=>{this.oRow=new c.Ji(this.VoucherColumns.length,22),this.oRow.Height=l,this.SetCellValue(n.VoucherNo,this.VoucherColumns[0].DataFormat,"STRING",this.oRow.Cells[0],this.VoucherColumns[0].ID),null!=n.Debit&&(i+=parseFloat(n.Debit),this.SetCellValue(n.Debit,this.VoucherColumns[1].DataFormat,"FLOAT",this.oRow.Cells[1],this.VoucherColumns[1].ID)),null!=n.Credit&&(e+=parseFloat(n.Credit),this.SetCellValue(n.Credit,this.VoucherColumns[2].DataFormat,"FLOAT",this.oRow.Cells[2],this.VoucherColumns[2].ID)),this.oRow.id=A.d.slick.rowid,this.VoucherData.push(this.oRow)})):"Product"==this.BackTrackType&&(this.VoucherData.Clear(),s.Tables[0].forEach(n=>{this.oRow=new c.Ji(this.VoucherColumns.length,22),this.oRow.Height=l,this.SetCellValue(n.VoucherNo,this.VoucherColumns[0].DataFormat,"STRING",this.oRow.Cells[0],this.VoucherColumns[0].ID),null!=!n.Receipt&&(i+=parseFloat(n.Receipt),this.SetCellValue(n.Receipt,this.VoucherColumns[1].DataFormat,"FLOAT",this.oRow.Cells[1],this.VoucherColumns[1].ID)),null!=!n.Issue&&(e+=parseFloat(n.Issue),this.SetCellValue(n.Issue,this.VoucherColumns[2].DataFormat,"FLOAT",this.oRow.Cells[2],this.VoucherColumns[2].ID)),this.oRow.id=A.d.slick.rowid,this.VoucherData.push(this.oRow)})),s.Tables[0].length>0&&(this.oRow=new c.Ji(this.VoucherColumns.length,22),this.oRow.Height=24,this.oRow.Type=c.QS.GrossTotal,this.oRow.Cells[0].IsNormal=!1,this.oRow.Cells[0].CellAppearance=this.GrossTotalAppearance,this.oRow.Cells[0].Text="Balance",this.oRow.Cells[1].IsNormal=!1,this.oRow.Cells[1].CellAppearance=this.GrossTotalAppearance_Data,"Account"==this.BackTrackType?this.SetCellValue(i-e,this.BalanceFormat,"FLOAT",this.oRow.Cells[1],""):"Product"==this.BackTrackType&&this.SetCellValue(i-e,this.VoucherColumns[1].DataFormat,"FLOAT",this.oRow.Cells[1],""),this.oRow.id=A.d.slick.rowid,this.VoucherData.push(this.oRow)))}GetAccountQuery(){let e="",i=null!=this.Report&&this.Report.Preferences.ContainsKey("RoundOffDecimals")?this.Report.Preferences.RoundOffDecimals:"",o="";this.IsLocationVisible&&null!=this.ReportLocationWhere&&(o=r.J0.IsEmpty(this.ReportLocationWhere)?" AND 1<>1":" AND DCC.dcCCNID2 IN ("+this.ReportLocationWhere+")");let t="",l="",a="",h="",s="",n=this.Report.GetDimensionFilter_Str("DCC.dcCCNID");this.CADimension>5e4&&this.CANodeID>1&&(n=n+" AND DCC.dcCCNID"+(this.CADimension-5e4)+"="+this.CANodeID,a=" JOIN ACC_Accounts CA WITH(NOLOCK) ON CA.AccountID=ACC.DebitAccount",h=" JOIN ACC_Accounts CA WITH(NOLOCK) ON CA.AccountID=ACC.CreditAccount",s=" OR CA.AccountTypeID IN (6,7)"),(o.length>0||n.length>0)&&(t=" INNER JOIN COM_DocCCData DCC WITH(NOLOCK) ON DCC.AccDocDetailsID=ACC.AccDocDetailsID "+o+n,l=" INNER JOIN COM_DocCCData DCC WITH(NOLOCK) ON DCC.InvDocDetailsID=ACC.InvDocDetailsID "+o+n);let D="",T="",p="";if(0==this.UnPostedDocsList.length?D=" AND (ACC.StatusID=369 or ACC.StatusID=429)":D+=" AND ACC.StatusID IN (369,429,"+this.UnPostedDocsList+")",p="DocDate<@From",this.PDCInclude){let u="(ACC.StatusID=370 OR ACC.StatusID=439";this.IncludeTerminatedPDC&&(u+=" OR ACC.StatusID=452"),u+=")",T=" AND ACC.DocumentType<>16 AND ("+u+" OR (ACC.DocumentType<>14 AND ACC.DocumentType<>19"+D+"))",p+=" AND ("+u+" OR (ACC.DocumentType<>14 AND ACC.DocumentType<>19"+D+"))"}else T=" AND ACC.DocumentType NOT IN (16,14,19)"+D,p+=" AND ACC.DocumentType<>14 AND ACC.DocumentType<>19"+D;let L="",V="",y="",M="",F="",b="";null!=this.Preferences&&this.Preferences.ContainsKey("IncludeIncExpOpeing")&&"1"==this.Preferences.IncludeIncExpOpeing&&(b="DECLARE @YrStart FLOAT SET @YrStart=CONVERT(FLOAT,CONVERT(DATETIME,'"+(null!=this.Preferences&&this.Preferences.ContainsKey("dtREFromDate")&&!r.J0.IsEmpty(this.Preferences.dtREFromDate)?this.Preferences.dtREFromDate:this.FromDate.Date.ToString("dd MMM yyyy"))+"'))",L=",(case when ACC.DocDate>=@YrStart and ACC.DocDate<@From then ACC.Amount else 0 end) PeriodOpDr,0 PeriodOpCr",V=",0,(case when ACC.DocDate>=@YrStart and ACC.DocDate<@From then ACC.Amount else 0 end)",y=",0.0,0.0",M=",CASE WHEN SUM(PeriodOpDr)-SUM(PeriodOpCr)>0 THEN SUM(PeriodOpDr)-SUM(PeriodOpCr) ELSE 0 END PeriodOpDr,CASE WHEN SUM(PeriodOpDr)-SUM(PeriodOpCr)<0 THEN SUM(PeriodOpCr)-SUM(PeriodOpDr) ELSE 0 END PeriodOpCr",F=",SUM(PeriodOpDr)-SUM(PeriodOpCr) PeriodOpening");let m="";if(this.MonthlyVisible||this.DailyVisible){let u=i.length>0?"VoucherNo,":"";m+=b+"SELECT SUM(OP_Dr)-SUM(OP_Cr) Opening"+F+" FROM (",i.length>0&&(m+="SELECT VoucherNo,\nCASE WHEN SUM(OP_Dr)-SUM(OP_Cr)>0 THEN round(SUM(OP_Dr)-SUM(OP_Cr),2) ELSE 0 END OP_Dr,\nCASE WHEN SUM(OP_Dr)-SUM(OP_Cr)<0 THEN round(SUM(OP_Cr)-SUM(OP_Dr),2) ELSE 0 END OP_Cr"+M+' "\nFROM ('),m+="\n--Opening Dr\nSELECT "+u+"ACC.Amount OP_Dr,0 OP_Cr"+L+"\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+t+a+"\nWHERE DebitAccount=@AccountID "+s+" AND (ACC.DocumentType=16 OR ("+p+"))\nUNION ALL--Opening Cr\nSELECT "+u+"0 OP_Dr,ACC.Amount OP_Cr"+V+"\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+t+h+"\nWHERE CreditAccount=@AccountID "+s+" AND (ACC.DocumentType=16 OR ("+p+"))",l.length>0&&(m+="\n--INEVENTORY DATA\nUNION ALL--Opening Dr\nSELECT "+u+"ACC.Amount OP_Dr,0 OP_Cr"+y+"\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+l+"\nWHERE DebitAccount=@AccountID AND (ACC.DocumentType=16 OR ("+p+"))\nUNION ALL--Opening Cr\nSELECT "+u+"0 OP_Dr,ACC.Amount OP_Cr"+y+"\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+l+"\nWHERE CreditAccount=@AccountID AND (ACC.DocumentType=16 OR ("+p+"))"),i.length>0&&(m+="\n                ) AS T1 GROUP BY VoucherNo"),m+=") AS T"}if(this.MonthlyVisible)e+="DECLARE @From FLOAT,@To FLOAT,@AccountID BIGINT\nSET @From=CONVERT(FLOAT,CONVERT(DATETIME,'"+this.FromDate.Date.ToString("dd MMM yyyy")+"'))\nSET @To=CONVERT(FLOAT,CONVERT(DATETIME,'"+this.ToDate.Date.ToString("dd MMM yyyy")+"'))\nSET @AccountID="+this.NodeID,e+="\nSELECT DATENAME(year,DocDate) YearName,DATENAME(month,DocDate) MonthName,Month(DocDate) mn,SUM(TR_Dr) Debit,SUM(TR_Cr) Credit,SUM(TR_Dr)-SUM(TR_Cr) DiffDrCr\nFROM (\nSELECT VoucherNo,DocDate,",e+=i.length>0?"\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)>0 THEN round(SUM(TR_Dr)-SUM(TR_Cr),"+i+") ELSE 0 END TR_Dr,\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)<0 THEN round(SUM(TR_Cr)-SUM(TR_Dr),"+i+") ELSE 0 END TR_Cr":"\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)>0 THEN SUM(TR_Dr)-SUM(TR_Cr) ELSE 0 END TR_Dr,\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)<0 THEN SUM(TR_Cr)-SUM(TR_Dr) ELSE 0 END TR_Cr",e+="\nFROM (\n--Transaction Dr\nSELECT VoucherNo,CONVERT(DATETIME,DocDate) DocDate,Amount TR_Dr,0 TR_Cr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+t+a+"\nWHERE (DocDate BETWEEN @From AND @To)"+T+" AND DebitAccount=@AccountID  "+s+"\nUNION ALL--Transaction Cr\nSELECT VoucherNo,CONVERT(DATETIME,DocDate) DocDate,0 TR_Dr, Amount TR_Cr\nFROM ACC_DocDetails ACC  WITH(NOLOCK)"+t+h+"\nWHERE (DocDate BETWEEN @From AND @To)"+T+` AND CreditAccount=@AccountID  ${s} `,l.length>0&&(e+="\n--INEVENTORY DATA\nUNION ALL--Transaction Dr\nSELECT VoucherNo,CONVERT(DATETIME,DocDate) DocDate,Amount TR_Dr,0 TR_Cr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+l+h+"\nWHERE (DocDate BETWEEN @From AND @To)"+T+" AND DebitAccount=@AccountID  "+s+"\nUNION ALL--Transaction Cr\nSELECT VoucherNo,CONVERT(DATETIME,DocDate) DocDate,0 TR_Dr, Amount TR_Cr\nFROM ACC_DocDetails ACC  WITH(NOLOCK)"+l+"\nWHERE (DocDate BETWEEN @From AND @To)"+T+` AND CreditAccount=@AccountID   ${s} `),e+=") AS T1 GROUP BY VoucherNo,DocDate\n) AS ACC GROUP BY DATENAME(year,DocDate),Month(DocDate),DATENAME(month,DocDate)\nORDER BY YearName,mn",e+="\n"+m.toString()+"\n",e+=" SELECT AccountName,AccountTypeID FROM ACC_Accounts with(nolock) WHERE AccountID=@AccountID";else if(this.DailyVisible){let u=new Date(parseInt(this.ReportGridObj.SelectedRow.Cells[1].Text),this.ReportGridObj.SelectedRow.NodeID-1,1),w=u.AddMonths(1).AddDays(-1);u<this.FromDate.Date&&(u=this.FromDate.Date),e+="DECLARE @From FLOAT,@To FLOAT,@AccountID BIGINT\nSET @From=CONVERT(FLOAT,CONVERT(DATETIME,'"+u.ToString("dd MMM yyyy")+"'))\nSET @To=CONVERT(FLOAT,CONVERT(DATETIME,'"+w.ToString("dd MMM yyyy")+"'))\nSET @AccountID="+this.NodeID,e+="\nSELECT DocDate,SUM(TR_Dr) Debit,SUM(TR_Cr) Credit,SUM(TR_Dr)-SUM(TR_Cr) DiffDrCr\nFROM (\nSELECT VoucherNo,DocDate,",e+=i.length>0?"\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)>0 THEN round(SUM(TR_Dr)-SUM(TR_Cr),"+i+") ELSE 0 END TR_Dr,\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)<0 THEN round(SUM(TR_Cr)-SUM(TR_Dr),"+i+") ELSE 0 END TR_Cr":"\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)>0 THEN SUM(TR_Dr)-SUM(TR_Cr) ELSE 0 END TR_Dr,\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)<0 THEN SUM(TR_Cr)-SUM(TR_Dr) ELSE 0 END TR_Cr",e+="\nFROM (\n--Transaction Dr\nSELECT VoucherNo,CONVERT(DATETIME,DocDate) DocDate,Amount TR_Dr,0 TR_Cr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+t+a+"\nWHERE (DocDate BETWEEN @From AND @To)"+T+" AND DebitAccount=@AccountID "+s+"\nUNION ALL--Transaction Cr\nSELECT VoucherNo,CONVERT(DATETIME,DocDate) DocDate,0 TR_Dr, Amount TR_Cr\nFROM ACC_DocDetails ACC  WITH(NOLOCK)"+t+h+"\nWHERE (DocDate BETWEEN @From AND @To)"+T+" AND CreditAccount=@AccountID  "+s,l.length>0&&(e+="\n--INEVENTORY DATA\nUNION ALL--Transaction Dr\nSELECT VoucherNo,CONVERT(DATETIME,DocDate) DocDate,Amount TR_Dr,0 TR_Cr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+l+a+"\nWHERE (DocDate BETWEEN @From AND @To)"+T+" AND DebitAccount=@AccountID "+s+"\nUNION ALL--Transaction Cr\nSELECT VoucherNo,CONVERT(DATETIME,DocDate) DocDate,0 TR_Dr, Amount TR_Cr\nFROM ACC_DocDetails ACC  WITH(NOLOCK)"+l+h+"\nWHERE (DocDate BETWEEN @From AND @To)"+T+" AND CreditAccount=@AccountID "+s),e+=") AS T1 GROUP BY VoucherNo,DocDate\n) AS ACC GROUP BY DocDate\nORDER BY DocDate",e+="\n"+m.toString()+"\n"}else this.VoucherVisible&&(e+="DECLARE @From FLOAT,@To FLOAT,@AccountID BIGINT\nSET @From=CONVERT(FLOAT,CONVERT(DATETIME,'"+r.J0.ParseDate(this.ReportGridObj.SelectedRow.Tag).ToString("dd MMM yyyy")+"'))\nSET @AccountID="+this.NodeID,e+="\nSELECT VoucherNo,\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)>0 THEN SUM(TR_Dr)-SUM(TR_Cr) ELSE NULL END Debit,\nCASE WHEN SUM(TR_Dr)-SUM(TR_Cr)<0 THEN SUM(TR_Cr)-SUM(TR_Dr) ELSE NULL END Credit\nFROM (",e+="\n--Transaction Dr\nSELECT VoucherNo,Amount TR_Dr,0 TR_Cr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+t+a+"\nWHERE DocDate=@From"+T+" AND DebitAccount=@AccountID "+s+"\nUNION ALL--Transaction Cr\nSELECT VoucherNo,0 TR_Dr, Amount TR_Cr\nFROM ACC_DocDetails ACC  WITH(NOLOCK)"+t+h+"\nWHERE DocDate=@From"+T+" AND CreditAccount=@AccountID "+s,l.length>0&&(e+="\n--INEVENTORY DATA\nUNION ALL--Transaction Dr\nSELECT VoucherNo,Amount TR_Dr,0 TR_Cr\nFROM ACC_DocDetails ACC WITH(NOLOCK)"+l+a+"\nWHERE DocDate=@From"+T+" AND DebitAccount=@AccountID "+s+"\nUNION ALL--Transaction Cr\nSELECT VoucherNo,0 TR_Dr, Amount TR_Cr\nFROM ACC_DocDetails ACC  WITH(NOLOCK)"+l+h+"\nWHERE DocDate=@From"+T+" AND CreditAccount=@AccountID "+s),e+=") AS ACC GROUP BY VoucherNo");return e.toString()}GetProductQuery(){let e="",i="";this.IsLocationVisible&&null!=this.ReportLocationWhere&&(i=r.J0.IsEmpty(this.ReportLocationWhere)?" AND 1<>1":" AND DCC.dcCCNID"+(this.Report.oReportDialog.Locations.DBColumnID-5e4)+" IN ("+this.ReportLocationWhere+")");let o="",t="",l="",a="",h=this.Report.GetDimensionFilter_Str("DCC.dcCCNID");if((i.length>0||h.length>0)&&(l=" INNER JOIN COM_DocCCData DCC WITH(NOLOCK) ON DCC.InvDocDetailsID=D.InvDocDetailsID "+i+h),a=this.IncludeUnPostedDocs?"":" AND D.StatusID=369",a+=W.M.GetExcludeStockTransfer(this.Report),("26419"==this.FieldName||"26420"==this.FieldName)&&(t="26420"==this.FieldName?"ReserveQuantity":"HoldQuantity",o="case when L.IsQtyIgnored=0 then L.UOMConvertedQty else L.ReserveQuantity end",r.J0.IsEmpty(A.d.SessionManager.Preferences.HoldResCancelledDocs)||(o="case when (L.IsQtyIgnored=0 or L.Costcenterid in("+A.d.SessionManager.Preferences.HoldResCancelledDocs+")) then L.UOMConvertedQty else L.ReserveQuantity end")),this.MonthlyVisible){let s=!1,n="";this.FromDate.Visible?n="(D.DocDate BETWEEN @From AND @To)":(s=!0,n="D.DocDate<=@To"),e+="DECLARE @From FLOAT,@To FLOAT,@ProductID BIGINT\nSET @From=CONVERT(FLOAT,CONVERT(DATETIME,'"+this.FromDate.Date.ToString("dd MMM yyyy")+"'))\nSET @To=CONVERT(FLOAT,CONVERT(DATETIME,'"+this.ToDate.Date.ToString("dd MMM yyyy")+"'))\nSET @ProductID="+this.NodeID,e+="\nSELECT DATENAME(year,DocDate) YearName,DATENAME(month,DocDate) MonthName,Month(DocDate) mn,SUM(Receipt) Receipt,SUM(Issue) Issue\nFROM (",e+="26419"==this.FieldName||"26420"==this.FieldName?"\n--Transaction Reserve\nSELECT CONVERT(DATETIME,D.DocDate) DocDate,D."+t+" Receipt,0 Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=1 AND D.VoucherType=-1 AND D.DocumentType in (7,9,11,12,24) AND D."+t+">0 AND "+n+a+"\nUNION ALL\n--Transaction Release\nSELECT CONVERT(DATETIME,L.DocDate) DocDate,0 Receipt,"+o+" Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nJOIN INV_DocDetails L WITH(NOLOCK) ON D.InvDocDetailsID=L.LinkedInvDocDetailsID AND "+n.Replace("D.","L.")+"\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=1 AND D.VoucherType=-1 AND D.DocumentType in (7,9,11,12,24) AND D."+t+">0 AND "+n+a:"\n--Transaction Receipt\nSELECT CONVERT(DATETIME,D.DocDate) DocDate,D.UOMConvertedQty Receipt,0 Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=0 AND D.VoucherType=1 AND D.DocumentType<>3 AND "+n+a+"\nUNION ALL\n--Transaction Issue\nSELECT CONVERT(DATETIME,D.DocDate) DocDate,0 Receipt,D.UOMConvertedQty Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=0 AND D.VoucherType=-1 AND D.DocumentType<>3 AND "+n+a,e+=") AS INV GROUP BY DATENAME(year,DocDate),Month(DocDate),DATENAME(month,DocDate)\nORDER BY YearName,mn",e+="26419"==this.FieldName||"26420"==this.FieldName?s?" \nSELECT NULL Opening":"\nselect isnull(sum(HoldQuantity-rel),0) Opening from (\nselect HoldQuantity,case when release>HoldQuantity then HoldQuantity else release end rel from\n(SELECT D."+t+" HoldQuantity\n,isnull((select sum("+o+") from INV_DocDetails L WITH(NOLOCK) where D.InvDocDetailsID=L.LinkedInvDocDetailsID),0) release\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=1 AND D.VoucherType=-1 AND D.DocumentType in (7,9,11,12,24) AND D.DocDate<@From "+a+") as t)as temp":s?"\nSELECT SUM(Receipt)-SUM(Issue) Opening FROM (\n--Opening Receipt\nSELECT D.UOMConvertedQty Receipt,0 Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=0 AND D.VoucherType=1 AND \n(D.DocDate<=@To AND D.DocumentType=3)"+a+"\nUNION ALL\n--Opening Issue\nSELECT 0 Receipt,D.UOMConvertedQty Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=0 AND D.VoucherType=-1 AND \n(D.DocDate<=@To AND D.DocumentType=3)"+a+"\n) AS T":"\nSELECT SUM(Receipt)-SUM(Issue) Opening FROM (\n--Opening Receipt\nSELECT D.UOMConvertedQty Receipt,0 Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=0 AND D.VoucherType=1 AND \n(D.DocDate<@From OR (D.DocDate<=@To AND D.DocumentType=3))"+a+"\nUNION ALL\n--Opening Issue\nSELECT 0 Receipt,D.UOMConvertedQty Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=0 AND D.VoucherType=-1 AND \n(D.DocDate<@From OR (D.DocDate<=@To AND D.DocumentType=3))"+a+"\n) AS T",e+=" SELECT ProductName FROM INV_Product WITH(NOLOCK) WHERE ProductID=@ProductID"}else if(this.DailyVisible){let s=new Date(parseInt(this.ReportGridObj.SelectedRow.Cells[1].Text),this.ReportGridObj.SelectedRow.NodeID,1),n=s.AddMonths(1).AddDays(-1);s<this.FromDate.Date&&this.FromDate.Visible&&(s=this.FromDate.Date),n>this.ToDate.Date&&this.ToDate.Visible&&(n=this.ToDate.Date),e+="DECLARE @From FLOAT,@To FLOAT,@ProductID BIGINT\nSET @From=CONVERT(FLOAT,CONVERT(DATETIME,'"+s.ToString("dd MMM yyyy")+"'))\nSET @To=CONVERT(FLOAT,CONVERT(DATETIME,'"+n.ToString("dd MMM yyyy")+"'))\nSET @ProductID="+this.NodeID,e+="\nSELECT CONVERT(DATETIME,DocDate) DocDate,SUM(Receipt) Receipt,SUM(Issue) Issue\nFROM (",e+="26419"==this.FieldName||"26420"==this.FieldName?"\n--Transaction Reserve\nSELECT D.DocDate,D."+t+" Receipt,0 Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=1 AND D.VoucherType=-1 AND D.DocumentType in (7,9,11,12,24) AND D."+t+">0 AND (D.DocDate BETWEEN @From AND @To)"+a+"\nUNION ALL\n--Transaction Release\nSELECT L.DocDate,0 Receipt,"+o+" Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nJOIN INV_DocDetails L WITH(NOLOCK) ON D.InvDocDetailsID=L.LinkedInvDocDetailsID\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=1 AND D.VoucherType=-1 AND D.DocumentType in (7,9,11,12,24) AND D."+t+">0 AND (D.DocDate BETWEEN @From AND @To)"+a:"\n--Transaction Receipt\nSELECT D.DocDate,D.UOMConvertedQty Receipt,0 Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=0 AND D.VoucherType=1 AND D.DocumentType<>3 AND (D.DocDate BETWEEN @From AND @To)"+a+"\nUNION ALL\n--Transaction Issue\nSELECT D.DocDate,0 Receipt,D.UOMConvertedQty Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=0 AND D.VoucherType=-1 AND D.DocumentType<>3 AND (D.DocDate BETWEEN @From AND @To)"+a,e+=") AS INV GROUP BY DocDate\nORDER BY DocDate",e+="26419"==this.FieldName||"26420"==this.FieldName?"\nselect isnull(sum(HoldQuantity-rel),0) Opening from (\nselect HoldQuantity,case when release>HoldQuantity then HoldQuantity else release end rel from\n(SELECT D."+t+" HoldQuantity\n,isnull((select sum("+o+") from INV_DocDetails L WITH(NOLOCK) where D.InvDocDetailsID=L.LinkedInvDocDetailsID),0) release\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=1 AND D.VoucherType=-1 AND D.DocumentType in (7,9,11,12,24) AND D.DocDate<@From "+a+") as t)as temp":"\nSELECT SUM(Receipt)-SUM(Issue) Opening FROM (\n--Opening Receipt\nSELECT D.UOMConvertedQty Receipt,0 Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=0 AND D.VoucherType=1 AND \n(D.DocDate<@From OR (D.DocDate<=@To AND D.DocumentType=3))"+a+"\nUNION ALL\n--Opening Issue\nSELECT 0 Receipt,D.UOMConvertedQty Issue\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=0 AND D.VoucherType=-1 AND \n(D.DocDate<@From OR (D.DocDate<=@To AND D.DocumentType=3))"+a+"\n) AS T"}else this.VoucherVisible&&(e+="DECLARE @From FLOAT,@To FLOAT,@ProductID BIGINT\nSET @From=CONVERT(FLOAT,CONVERT(DATETIME,'"+r.J0.ParseDate(this.ReportGridObj.SelectedRow.Tag).ToString("dd MMM yyyy")+"'))\nSET @ProductID="+this.NodeID,e+="26419"==this.FieldName||"26420"==this.FieldName?"\n--Transaction Reserve\nSELECT D.VoucherNo,SUM(D."+t+") Receipt,NULL Issue,1 VoucherType\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=1 AND D.VoucherType=-1 AND D.DocumentType in (7,9,11,12,24) AND D."+t+">0 AND D.DocDate=@From"+a+"\nGROUP BY D.VoucherNo\nUNION ALL\n--Transaction Release\nSELECT L.VoucherNo,0 Receipt,SUM("+o+") Issue,-1 VoucherType\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nJOIN INV_DocDetails L WITH(NOLOCK) ON D.InvDocDetailsID=L.LinkedInvDocDetailsID\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=1 AND D.VoucherType=-1 AND D.DocumentType in (7,9,11,12,24) AND D."+t+">0 AND D.DocDate=@From"+a+"\nGROUP BY L.VoucherNo":"\n--Transaction Receipt\nSELECT D.VoucherNo,SUM(D.UOMConvertedQty) Receipt,NULL Issue,1 VoucherType\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=0 AND D.VoucherType=1 AND D.DocumentType<>3 AND D.DocDate=@From"+a+"\nGROUP BY D.VoucherNo\nUNION ALL\n--Transaction Issue\nSELECT D.VoucherNo,NULL Receipt,SUM(D.UOMConvertedQty) Issue,-1 VoucherType\nFROM INV_DocDetails D WITH(NOLOCK)"+l+"\nWHERE D.ProductID=@ProductID AND D.IsQtyIgnored=0 AND D.VoucherType=-1 AND D.DocumentType<>3 AND D.DocDate=@From"+a+"\nGROUP BY D.VoucherNo",e+="\nORDER BY VoucherType DESC,VoucherNo");return e.toString()}SetVisibilty(e){0==e?(this.Title="Monthly Balances",this.BackButtonVisible=!1,this.MonthlyVisible=!0,this.DailyVisible=!1,this.VoucherVisible=!1,this.OpeningBalance.Visible=!0,this.OpeningBalance.Text=this.MonthlyOpening,this.Accounts.Enable=!0):1==e?(this.Title="Daily Balances",this.BackButtonVisible=!0,this.MonthlyVisible=!1,this.VoucherVisible=!1,this.DailyVisible=!0,this.OpeningBalance.Visible=!0,this.Accounts.Enable=!1):2==e&&(this.Title="Voucher Balances",this.BackButtonVisible=!0,this.MonthlyVisible=!1,this.DailyVisible=!1,this.VoucherVisible=!0,this.OpeningBalance.Visible=!1,this.Accounts.Enable=!1)}OnRowDoubleClick(e,i){return this.MonthlyVisible?this.OnMonthlyRowDoubleClick(e,i):this.DailyVisible?this.OnDailyRowDoubleClick(e,i):this.VoucherVisible&&this.OnVoucherRowDoubleClick(e,i),!0}OnMonthlyRowDoubleClick(e,i){this.MonthlyData.indexOf(e)<this.MonthlyData.length-1&&(this.SetVisibilty(1),this.LoadData())}OnDailyRowDoubleClick(e,i){this.DailyData.indexOf(e)<this.DailyData.length-1&&(this.SetVisibilty(2),this.LoadData())}OnVoucherRowDoubleClick(e,i){this.VoucherVisible&&this.VoucherData.indexOf(e)<this.VoucherData.length-1&&S.RibbonExtViewModel.LoadDocument_VoucherNo(e.Cells[0].Text)}OnDataClick(e){e.Column.LinkType==N.T6.Document&&this.VoucherData.indexOf(e.Row)<this.VoucherData.length&&(S.RibbonExtViewModel.LoadDocument_VoucherNo(e.Row.Cells[e.ColumnIndex].Text),this.WidgetVisible&&A.d.page.HideDialog(this.PopUpGUID))}SetCellValue(e,i,o,t,l){E.ReportViewModel.SetCellValue(e,i,o,-1,t,l)}LoadWidgetData(e){e.Tables[0].Columns.push("Sno");let i=1;e.Tables[0].forEach(o=>{o.Sno=i++}),e.Tables[0].forEach(o=>{this.oRow=new c.Ji(this.VoucherColumns.length,22),this.oRow.Height=22;for(let t=0;t<this.VoucherColumns.length;t++){let l=this.VoucherColumns[t];r.J0.IsEmpty(o[l.ID])||E.ReportViewModel.SetCellValue(o[l.ID],l.DataFormat,l.ColumnType,-1,this.oRow.Cells[t],l.ID)}this.oRow.id=A.d.slick.rowid,this.VoucherData.push(this.oRow)})}}}}]);