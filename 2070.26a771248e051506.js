"use strict";(self.webpackChunkRevenUWebApp=self.webpackChunkRevenUWebApp||[]).push([[2070],{42070:(f,D,u)=>{u.r(D),u.d(D,{ACC_BRSReport:()=>A});var T=u(76260),d=u(61488),s=u(43767),C=u(32040),R=u(39026);class A extends T.A{constructor(o){super(o),this.i=0,this.k=0,this.Balance=0,this.OpBalance=0,this.colBalanceIndex=-1,this.colDebitIndex=-1,this.colCreditIndex=-1,this.colSpanBF=-1,this.colSubTotalStartIndex=0,this.BankID=0,this.DateWiseDrCr=!1,this.dblDr=0,this.dblCr=0,this.dblTotal=0,this.dsAccount=null,this.iLoop=0,this.ForeignCurrencyID=0}LoadReport(){let o="",h="",e=this.ViewModel.oReportDialog.GetSeqNosList();e.length>0&&!this.ViewModel.oReportDialog.IsZeroSelected&&!this.ViewModel.oReportDialog.IsOneSelected&&(e=this.ViewModel.oReportDialog.GetSeqNosListWithRoots(),this.ViewModel.oReportDialog.IsGroupExists?(o="A1.AccountID=GTP.GTID",h=e.Contains(",")?",(select T.AccountID GTID from ACC_Accounts T with(nolock),ACC_Accounts GT1 with(nolock) where T.lft BETWEEN GT1.lft AND GT1.rgt AND GT1.AccountID IN ("+e+") group by T.AccountID) AS GTP ":",(select T.AccountID GTID from ACC_Accounts T with(nolock),ACC_Accounts GT1 with(nolock) where T.lft BETWEEN GT1.lft AND GT1.rgt AND GT1.AccountID="+e+" group by T.AccountID) AS GTP "):o=e.Contains(",")?"A1.AccountID IN ("+e+")":"A1.AccountID="+e);let i="";i="SELECT A1.AccountID,A1.AccountName"+this.ViewModel.GroupSelectTag+" FROM ACC_Accounts A1 with(nolock)"+this.ViewModel.GroupFromTag+h+" WHERE A1.IsGroup=0 AND A1.AccountTypeID in (2,3) ",i+=this.GetAccountWiseLocationWhere("A1"),o.length>0&&(i+=" AND "+o),i+=" Order By A1.AccountName",C.d.report.ReportDataSetAsync("RPT022",this.ViewModel.IsReportDB,i).then(a=>{if(this.dsAccount=a,0==this.ViewModel.lstGroup.length){let c=new R.Group;c.Height=22,c.GroupAppearance=new d.bA,c.GroupAppearance.BackColor="#FFFBD5B5",c.GroupAppearance.ForeColor="#FF000000",c.GroupAppearance.FontFamilyName="Calibri",c.GroupAppearance.FontSize=15,c.GroupAppearance.IsBold=!0,this.ViewModel.lstGroup.push(c)}this.LoadReportFromData(0,0)}).then(()=>{this.ViewModel.process_RunWorkerCompleted()})}LoadReportWithPostFilters(o){}LoadReportFromData(o,h){this.GrdRow=-1,this.colSubTotalStartIndex=-1,this.AggTotal=s.J0.NumArray(this.oColumns.length+1,2),this.DataSetCollection.Clear(),this.ViewModel.lstGroupIndex.Clear(),this.ViewModel.Data.Clear();for(let e=0;e<this.oColumns.length;e++)if("Debit"==this.oColumns[e].ID||"Credit"==this.oColumns[e].ID||"Balance"==this.oColumns[e].ID){this.colSpanBF=e;break}if(this.ViewModel.lstGroup.length>0)for(this.k=0;this.k<this.oColumns.length;this.k++)if(this.ViewModel.lstGroup[0].TotalCols.ContainsKey(this.oColumns[this.k].ID)){this.colSubTotalStartIndex=this.k;break}for(let e=this.oColumns.length-1;e>=0;e--)"Balance"==this.oColumns[e].ID?(this.colBalanceIndex=e,this.oColumns[e].DataFormat.ShowDefaultSign=0):"Dr"==this.oColumns[e].ID?this.colDebitIndex=e:"Cr"==this.oColumns[e].ID&&(this.colCreditIndex=e);try{if(null==this.dsAccount){if(this.dsAccount=C.d.report.ReportDataSet("RPT053",this.ViewModel.IsReportDB,o.toString()),null!=this.dsAccount&&this.dsAccount.Tables.length>0&&this.dsAccount.Tables[0].length>0){if(0==this.ViewModel.lstGroup.length){let i=new R.Group;i.Height=22,i.GroupAppearance=new d.bA,i.GroupAppearance.BackColor="#FFFBD5B5",i.GroupAppearance.ForeColor="#FF000000",i.GroupAppearance.FontFamilyName="Calibri",i.GroupAppearance.FontSize=15,i.GroupAppearance.IsBold=!0,this.ViewModel.lstGroup.push(i)}let e=this.NewReportRow_2(d.QS.Group,this.ViewModel.lstGroup[0].GroupAppearance);this.ViewModel.lstGroup[0].Height>0&&(e.Height=this.ViewModel.lstGroup[0].Height),e.PrintVisible=this.ViewModel.lstGroup[0].GroupAppearance.IsPrintVisible,e.Cells[0].Text=this.dsAccount.Tables[0][0].AccountName.toString(),e.Cells[0].ColSpan=e.Cells.length,e.LevelNo=0,this.Balance=0,this.GrdRow++,this.ViewModel.Data.push(e)}this.LoadByBank(o,h).then(()=>{this.ViewModel.process_RunWorkerCompleted()})}else{if(h=0,this.ViewModel.Preferences.ContainsKey("ForeignCurrency")){let e=new s.VB;e.LoadXml("<XML>"+this.ViewModel.Preferences.ForeignCurrency+"</XML>");let i=e.SelectSingleNode("IsChecked");null!=i&&"1"==i.InnerText&&(i=e.SelectSingleNode("Value"),h=parseInt(i.InnerText))}this.LoadReportFromData_CallBack(h)}}catch(e){this.ViewModel.DisplayMessage=e.Message,Logger.ErrorLog("ACC_BRSReport::Error LoadReport",e)}}LoadReportFromData_CallBack(o){if(this.iLoop>=this.dsAccount.Tables[0].length)return void this.ViewModel.process_RunWorkerCompleted();this.AggTotal=s.J0.NumArray(this.oColumns.length+1,2);let h=this.NewReportRow_2(d.QS.Group,this.ViewModel.lstGroup[0].GroupAppearance);this.ViewModel.lstGroup[0].Height>0&&(h.Height=this.ViewModel.lstGroup[0].Height),h.PrintVisible=this.ViewModel.lstGroup[0].GroupAppearance.IsPrintVisible,h.Cells[0].Text=this.dsAccount.Tables[0][this.iLoop].AccountName.toString(),h.Cells[0].ColSpan=h.Cells.length,h.LevelNo=0,this.Balance=0,this.GrdRow++,this.ViewModel.Data.push(h),this.LoadByBank(parseInt(this.dsAccount.Tables[0][this.iLoop].AccountID),o).then(()=>{this.iLoop++,this.LoadReportFromData_CallBack(o)})}LoadByBank(o,h){let e=null,i=null,a=0,c=0,p=0,w=0,n=!1;0!=o&&(this.BankID=o),this.DateWiseDrCr="1"==this.ViewModel.Preferences.DateWiseDrCr;let r=[];return r.push(this.BankID),r.push(1),r.push(this.ViewModel.oReportDialog.FromDate.Date),r.push(this.ViewModel.oReportDialog.ToDate.Date),this.ViewModel.oReportDialog.Locations.Visible?(this.ViewModel.oReportDialog.SetLocationWhere(),r.push(this.ViewModel.oReportDialog.LocationWhere)):r.push(""),r.push(h),r.push(1),r.push(""),r.push(""),C.d.report.GetBRSVouchers(r).then(t=>{this.ViewModel.DateFilter=this.ViewModel.FromDatePicker.Date.ToString(C.d.SessionManager.Preferences["Date Format"]),this.ViewModel.DateFilter+="  to  "+this.ViewModel.ToDatePicker.Date.ToString(C.d.SessionManager.Preferences["Date Format"]),null==this.dsAccount&&t.Tables[3].length>0&&(this.ViewModel.DateFilter+=" ["+t.Tables[3][0].AccountName.toString()+"]"),this.ViewModel.Preferences.ContainsKey("Preview")&&"true"==this.ViewModel.Preferences.Preview?(e=this.dtpreview,i=this.dtpreviewColumns,e.forEach(l=>{null!=l.clrDate_key&&(l.ClearanceDate=l.clrDate_key),l.BRS_Status=l.Status})):(e=t.Tables[0],i=t.Columns[0]),!s.J0.IsEmpty(i)&&!i.Contains("Status")&&i.push("Status"),!s.J0.IsEmpty(i)&&!i.Contains("AccountName")&&(i.push("AccountName"),e.forEach(l=>{l.AccountName=t.Tables[3][0].AccountName}));for(let l=e.length-1;l>=0;l--)this.ViewModel.Preferences.ContainsKey("Preview")&&"true"==this.ViewModel.Preferences.Preview?null!=e[l].clrDate_key?s.J0.ParseDate(e[l].clrDate_key)>this.ViewModel.oReportDialog.ToDate.Date?e[l].BRS_Status=0:1900==s.J0.ParseDate(e[l].clrDate_key).getFullYear()&&(e[l].ClearanceDate=null):e[l].ClearanceDate=null:s.J0.ParseDate(e[l].ClearanceDate)>this.ViewModel.oReportDialog.ToDate.Date?e[l].BRS_Status=0:1900==s.J0.ParseDate(e[l].ClearanceDate).getFullYear()&&(e[l].ClearanceDate=null),e[l].Status=e[l].BRS_Status;t.Tables.length>1&&t.Columns[1].Contains("Bal")&&t.Tables[1].length>0&&!s.J0.IsEmpty(t.Tables[1][0][t.Columns[1][0]])&&(this.dblTotal=parseFloat(t.Tables[1][0][t.Columns[1][0]])),null!=t&&t.Tables.length>1&&t.Columns[1].Contains("Bal")&&t.Tables[1].length>0&&!s.J0.IsEmpty(t.Tables[1][0][t.Columns[1][0]])&&(a=parseFloat(t.Tables[1][0][t.Columns[1][0]])),null!=t&&t.Tables.length>2&&t.Columns[2].Contains("Bal")&&t.Tables[2].length>0&&!s.J0.IsEmpty(t.Tables[2][0][t.Columns[2][0]])&&(c=parseFloat(t.Tables[2][0][t.Columns[2][0]])),null!=t&&t.Tables.length>5&&t.Columns[5].Contains("Bal")&&t.Tables[5].length>0&&!s.J0.IsEmpty(t.Tables[5][0][t.Columns[5][0]])&&(w=parseFloat(t.Tables[5][0][t.Columns[5][0]])),null!=t&&t.Tables.length>4&&t.Columns[4].Contains("Bal")&&t.Tables[4].length>0&&!s.J0.IsEmpty(t.Tables[4][0][t.Columns[4][0]])&&(n=!0,p=parseFloat(t.Tables[4][0][t.Columns[4][0]])),this.ViewModel.Preferences.ContainsKey("GroupBy")&&""!=this.ViewModel.Preferences.GroupBy&&(e=this.CheckGroupbyCheque(e,i)),this.dv=e,this.dvTable=e,this.dv.SortBy(["Date,VoucherNo"]),this.BalanceBFAppearance.ForeColor=this.BalanceBFAppearance_Data.ForeColor="Red",this.BalanceBFAppearance.IsBold=this.BalanceBFAppearance_Data.IsBold=!0,this.GrdRow++,this.oRow=this.NewReportRow_2(d.QS.SubTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[2].Text=this.ViewModel.Preferences.ContainsKey("BRSLbl1")&&!s.J0.IsEmpty(this.ViewModel.Preferences.BRSLbl1)?this.ViewModel.Preferences.BRSLbl1:C.d.GetResource("Balance As Per Books"),this.oRow.Cells[2].CellAppearance=this.GrossTotalAppearance,this.dblTotal>=0?this.ViewModel.SetCellValue(this.dblTotal,this.oColumns[this.colDebitIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colDebitIndex]):this.ViewModel.SetCellValue(-this.dblTotal,this.oColumns[this.colCreditIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colCreditIndex]),this.ViewModel.Data.push(this.oRow),this.DateWiseDrCr?(this.dv=this.dvTable.filter(l=>0==l.Status),this.addBRS(),this.GrdRow++,this.oRow=this.NewReportRow_2(d.QS.SubTotal,this.BalanceBFAppearance_Data),this.oRow.LevelNo=1,this.oRow.Cells[this.colDebitIndex-1].Text=C.d.GetResource("Reports_ReportTotal"),this.oRow.Cells[this.colDebitIndex-1].CellAppearance=this.BalanceBFAppearance,this.colDebitIndex>=0&&this.ViewModel.SetCellValue(this.AggTotal[this.colDebitIndex][0],this.oColumns[this.colDebitIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colDebitIndex]),this.colCreditIndex>=0&&this.ViewModel.SetCellValue(this.AggTotal[this.colCreditIndex][0],this.oColumns[this.colCreditIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colCreditIndex]),this.ViewModel.Data.push(this.oRow)):(this.dv=this.dvTable.filter(l=>0==l.Status&&(null==l.Cr||0==l.Cr)),this.dv.length>0&&(this.addBRS(),this.colDebitIndex>=0&&(this.GrdRow++,this.oRow=this.NewReportRow_2(d.QS.SubTotal,this.BalanceBFAppearance_Data),this.oRow.LevelNo=1,this.oRow.Cells[this.colDebitIndex-1].Text=this.ViewModel.Preferences.ContainsKey("BRSLbl3")&&!s.J0.StringIsNullOrEmpty(this.ViewModel.Preferences.BRSLbl3)?this.ViewModel.Preferences.BRSLbl3:"Total Debit",this.oRow.Cells[this.colDebitIndex-1].CellAppearance=this.BalanceBFAppearance,this.ViewModel.SetCellValue(this.AggTotal[this.colDebitIndex][0],this.oColumns[this.colDebitIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colDebitIndex]),this.ViewModel.Data.push(this.oRow))),this.dv=this.dvTable.filter(l=>0==l.Status&&(null==l.Dr||0==l.Dr)),this.dv.length>0&&(this.addBRS(),this.colCreditIndex>=0&&(this.GrdRow++,this.oRow=this.NewReportRow_2(d.QS.SubTotal,this.BalanceBFAppearance_Data),this.oRow.LevelNo=1,this.oRow.Cells[this.colCreditIndex-1].Text=this.ViewModel.Preferences.ContainsKey("BRSLbl4")&&!s.J0.StringIsNullOrEmpty(this.ViewModel.Preferences.BRSLbl4)?this.ViewModel.Preferences.BRSLbl4:"Total Credit",this.oRow.Cells[this.colCreditIndex-1].CellAppearance=this.BalanceBFAppearance,this.ViewModel.SetCellValue(this.AggTotal[this.colCreditIndex][0],this.oColumns[this.colCreditIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colCreditIndex]),this.ViewModel.Data.push(this.oRow)))),this.dblTotal=this.dblTotal-(this.AggTotal[this.colDebitIndex][0]-this.AggTotal[this.colCreditIndex][0]),this.GrdRow++,this.oRow=this.NewReportRow_2(d.QS.SubTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[2].Text=this.ViewModel.Preferences.ContainsKey("BRSLbl2")&&!s.J0.IsEmpty(this.ViewModel.Preferences.BRSLbl2)?this.ViewModel.Preferences.BRSLbl2:C.d.GetResource("Balance As Per Bank Statement"),this.oRow.Cells[2].CellAppearance=this.GrossTotalAppearance,this.dblTotal>=0?this.ViewModel.SetCellValue(this.dblTotal,this.oColumns[this.colDebitIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colDebitIndex]):this.ViewModel.SetCellValue(-this.dblTotal,this.oColumns[this.colCreditIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colCreditIndex]),this.ViewModel.Data.push(this.oRow),this.ViewModel.Preferences.ContainsKey("UnreconciledAmount")&&"0"==this.ViewModel.Preferences.UnreconciledAmount||(this.GrdRow++,this.oRow=this.NewReportRow_2(d.QS.SubTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[2].Text=this.ViewModel.Preferences.ContainsKey("BRSLbl5")&&!s.J0.StringIsNullOrEmpty(this.ViewModel.Preferences.BRSLbl5)?this.ViewModel.Preferences.BRSLbl5:"Total Unreconciled Amount",this.oRow.Cells[2].CellAppearance=this.GrossTotalAppearance,w>=0?this.ViewModel.SetCellValue(w,this.oColumns[this.colDebitIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colDebitIndex]):this.ViewModel.SetCellValue(-w,this.oColumns[this.colCreditIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colCreditIndex]),this.ViewModel.Data.push(this.oRow)),this.ViewModel.Preferences.ContainsKey("ReconciledAmount")&&"0"==this.ViewModel.Preferences.ReconciledAmount||(this.GrdRow++,this.oRow=this.NewReportRow_2(d.QS.SubTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[2].Text=this.ViewModel.Preferences.ContainsKey("BRSLbl6")&&!s.J0.StringIsNullOrEmpty(this.ViewModel.Preferences.BRSLbl6)?this.ViewModel.Preferences.BRSLbl6:"Total Reconciled Balance",this.oRow.Cells[2].CellAppearance=this.GrossTotalAppearance,c>=0?this.ViewModel.SetCellValue(c,this.oColumns[this.colDebitIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colDebitIndex]):this.ViewModel.SetCellValue(-c,this.oColumns[this.colCreditIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colCreditIndex]),this.ViewModel.Data.push(this.oRow)),n&&(this.GrdRow++,this.oRow=this.NewReportRow_2(d.QS.SubTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[2].Text="Statement Balance",this.oRow.Cells[2].CellAppearance=this.GrossTotalAppearance,p>=0?this.ViewModel.SetCellValue(p,this.oColumns[this.colDebitIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colDebitIndex]):this.ViewModel.SetCellValue(-p,this.oColumns[this.colCreditIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colCreditIndex]),this.ViewModel.Data.push(this.oRow),this.GrdRow++,this.oRow=this.NewReportRow_2(d.QS.SubTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[2].Text="Variance",this.oRow.Cells[2].CellAppearance=this.GrossTotalAppearance,c-p>=0?this.ViewModel.SetCellValue(c-p,this.oColumns[this.colDebitIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colDebitIndex]):this.ViewModel.SetCellValue(-(c-p),this.oColumns[this.colCreditIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colCreditIndex]),this.ViewModel.Data.push(this.oRow)),this.ViewModel.Preferences.ContainsKey("ShowReconciledEntries")&&"1"==this.ViewModel.Preferences.ShowReconciledEntries&&(this.dv=this.dvTable.filter(l=>1==l.Status),this.dv.length>0&&(this.colDebitIndex>=0&&(this.AggTotal[this.colDebitIndex][0]=0),this.colCreditIndex>=0&&(this.AggTotal[this.colCreditIndex][0]=0),this.GrdRow++,this.oRow=this.NewReportRow_2(d.QS.SubTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[2].Text="Reconciled Entries",this.oRow.Cells[2].CellAppearance=this.GrossTotalAppearance,this.ViewModel.Data.push(this.oRow),this.addBRS(),(this.colDebitIndex>=0||this.colCreditIndex>=0)&&(this.GrdRow++,this.oRow=this.NewReportRow_2(d.QS.SubTotal,this.GrossTotalAppearance_Data),this.oRow.Cells[this.colDebitIndex-1].Text="Reconciled Total",this.oRow.Cells[this.colDebitIndex-1].CellAppearance=this.GrossTotalAppearance,this.colDebitIndex>=0&&this.ViewModel.SetCellValue(this.AggTotal[this.colDebitIndex][0],this.oColumns[this.colDebitIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colDebitIndex]),this.colCreditIndex>=0&&this.ViewModel.SetCellValue(this.AggTotal[this.colCreditIndex][0],this.oColumns[this.colCreditIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colCreditIndex]),this.ViewModel.Data.push(this.oRow)))),this.ViewModel.refreshDataView()})}CheckGroupbyCheque(o,h){h.Contains("GroupIDs")||h.push("GroupIDs");let e=new Array,i=!1;"CHK"==this.ViewModel.Preferences.GroupBy&&(i=!0);for(let a=0;a<o.length;a++)if(!e.Contains(o[a])){let c=0,p=0,w="",n=o.filter(r=>r.VoucherNo==o[a].VoucherNo.toString());if(i&&(s.J0.IsEmpty(o[a].ChequeNo)||(n=n.filter(r=>r.ChequeNo.toString()==o[a].ChequeNo.toString()))),n.length>1){for(let r=1;r<n.length;r++)s.J0.IsEmpty(n[r].Dr)||(p+=parseFloat(n[r].Dr)),s.J0.IsEmpty(n[r].Cr)||(c+=parseFloat(n[r].Cr)),w+=n[r].AccDocDetailsID.toString()+",",e.push(n[r]);n[0].GroupIDs=w,n[0].Cr=s.J0.IsEmpty(n[0].Cr)?c:parseFloat(n[0].Cr)+c,n[0].Dr=s.J0.IsEmpty(n[0].Dr)?p:parseFloat(n[0].Dr)+p}}for(let a=0;a<e.length;a++)o.Remove(e[a]);return o.forEach(a=>{!s.J0.IsEmpty(a.Dr)&&!s.J0.IsEmpty(a.Cr)&&(parseFloat(a.Dr)>parseFloat(a.Cr)?(a.Dr=parseFloat(a.Dr)-parseFloat(a.Cr),a.Cr=null):parseFloat(a.Cr)>parseFloat(a.Dr)&&(a.Cr=parseFloat(a.Cr)-parseFloat(a.Dr),a.Dr=null))}),o}addBRS(){for(this.k=0;this.k<this.dv.length;this.k++){this.oRow=this.NewReportRow(),this.oRow.LevelNo=1,this.oRow.Cells[1].IsNormal=!1,this.dblDr=0,this.dblCr=0;for(let o=0;o<this.oColumns.length;o++){let h="";""!=this.oColumns[o].Formula||s.J0.IsEmpty(this.dv[this.k][this.oColumns[o].ID])||(h=this.dv[this.k][this.oColumns[o].ID].toString()),""!=h&&(this.ViewModel.SetCellValue(h,this.oColumns[o].DataFormat,this.oColumns[o].ColumnType,this.oRow.Cells[o]),o==this.colDebitIndex?(this.dblDr=s.J0.Double(h),this.AggTotal[o][0]+=this.dblDr):o==this.colCreditIndex&&(this.dblCr=s.J0.Double(h),this.AggTotal[o][0]+=this.dblCr))}this.Balance=this.Balance+this.dblDr-this.dblCr,this.colBalanceIndex>=0&&this.DateWiseDrCr&&this.ViewModel.SetCellValue(this.Balance,this.oColumns[this.colBalanceIndex].DataFormat,"FLOAT",this.oRow.Cells[this.colBalanceIndex]),this.ViewModel.ApplyKPI(this.oRow),this.GrdRow++,this.ViewModel.Data.push(this.oRow)}}}}}]);